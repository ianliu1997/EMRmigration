<controls:ChildWindow x:Class="PalashDynamics.Pathology.PathologyForms.TestDetailsChildWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
           xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
           xmlns:data="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data"
           xmlns:controlsToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit"
           xmlns:inputcombo="clr-namespace:PalashDynamics.Controls;assembly=PalashDynamics.Controls.AutoCompleteComboBox"  
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
           xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
                         xmlns:Grp="clr-namespace:Groupbox;assembly=Groupbox"  
                       xmlns:local="clr-namespace:PalashDynamics.Converters;assembly=PalashDynamics.Converters" 
            Width="550" Height="520" 
                       xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit" 
           HasCloseButton="False" Margin="0" Padding="0"
              x:Name="TestChild"                
           Loaded="ChildWindow_Loaded" >


    <controls:ChildWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/PalashDynamics;component/Generic.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <local:DateTimeConverter x:Key="DateConverter" />
        </ResourceDictionary>
    </controls:ChildWindow.Resources>

    <Grid x:Name="LayoutRoot" Margin="2" Background="White">
        <ScrollViewer Background="Transparent" VerticalScrollBarVisibility="Visible" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" controlsToolkit:ScrollViewerExtensions.IsMouseWheelScrollingEnabled="True">
            <Grid>

                <controlsToolkit:DockPanel   Name="docMain" LastChildFill="True" controlsToolkit:DockPanel.Dock= "Top" >

                    <controlsToolkit:DockPanel x:Name="docFooter" controlsToolkit:DockPanel.Dock="Bottom" >
                        <controlsToolkit:DockPanel Margin="2" controlsToolkit:DockPanel.Dock="Top">

                            <!--<StackPanel Grid.Row="3" x:Name="Footer1" Orientation="Horizontal" VerticalAlignment="Center"   Margin="0,3,5,3" HorizontalAlignment="Left" Background="Transparent">
                            <RadioButton x:Name="CmdAddFreeService" Content="Free Service" Margin="5,0,0,0" IsChecked="True" TabIndex="5"></RadioButton>
                            <RadioButton x:Name="CmdconcessionService" Content="Concession Service" Margin="5,0,0,0" TabIndex="6" ></RadioButton>
                        </StackPanel>-->


                            <StackPanel Grid.Row="3" x:Name="Footer" Orientation="Horizontal" VerticalAlignment="Center"   Margin="0,3,5,3" HorizontalAlignment="Right" Background="Transparent">
                                <StackPanel x:Name="SaveCommandPanel" Orientation="Horizontal"  Margin="0,0,0,0">
                                    <!--<ToggleButton  x:Name="cmdAdd"  Grid.Row="4" Content="Add" MinWidth="50" Background="#000000" Margin="5,0,0,0" HorizontalAlignment="Stretch"  Visibility="Visible" Style="{StaticResource ToggleButtonStyle}" Click="OKButton_Click" TabIndex="7" />-->
                                    <ToggleButton  x:Name="cmdClose"  Grid.Row="4" Content="Cancel" MinWidth="50" Background="#000000" Margin="2,0,0,0" HorizontalAlignment="Stretch"  Visibility="Visible"  Style="{StaticResource ToggleButtonStyle}" Click="CancelButton_Click" TabIndex="8"/>
                                </StackPanel>
                            </StackPanel>
                        </controlsToolkit:DockPanel>
                    </controlsToolkit:DockPanel>

                    <controlsToolkit:DockPanel x:Name="docTop" controlsToolkit:DockPanel.Dock="Top" LastChildFill="True">
                        <Border BorderBrush="{StaticResource TabControlDarkerBorder}" BorderThickness="1" CornerRadius="3,3,0,0" Margin="4" Background="Transparent" >
                            <controlsToolkit:DockPanel toolkit:DockPanel.Dock="Top">
                                <controlsToolkit:DockPanel x:Name="docHeader" controlsToolkit:DockPanel.Dock= "Top" >
                                    <Grid x:Name="LayoutRoot1"  Margin="0" Background="White">
                                        <Grid.Resources>
                                            <SolidColorBrush x:Key="BorderButton" Color="#FF333333"/>
                                            <SolidColorBrush x:Key="GlowDefault" Color="#FF00F1FF"/>
                                            <Style x:Key="ComboBoxDefault" TargetType="ComboBox">
                                                <Setter Property="Padding" Value="6,2,25,2"/>
                                                <Setter Property="Background" Value="#FF1F3B53"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="TabNavigation" Value="Once"/>
                                                <Setter Property="BorderBrush">
                                                    <Setter.Value>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                                            <GradientStop Color="#FF617584" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ComboBox">
                                                            <Grid>
                                                                <Grid.Resources>
                                                                    <Style TargetType="ToggleButton" x:Name="comboToggleStyle">
                                                                        <Setter Property="Foreground" Value="#FF333333"/>
                                                                        <Setter Property="Background" Value="#FF1F3B53"/>
                                                                        <Setter Property="BorderBrush">
                                                                            <Setter.Value>
                                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                                                                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                                                                    <GradientStop Color="#FF718597" Offset="0.375"/>
                                                                                    <GradientStop Color="#FF617584" Offset="1"/>
                                                                                </LinearGradientBrush>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter Property="BorderThickness" Value="1"/>
                                                                        <Setter Property="Padding" Value="3"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="ToggleButton">
                                                                                    <Grid>
                                                                                        <vsm:VisualStateManager.VisualStateGroups>
                                                                                            <vsm:VisualStateGroup x:Name="CommonStates">
                                                                                                <vsm:VisualState x:Name="Normal"/>
                                                                                                <vsm:VisualState x:Name="MouseOver">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </vsm:VisualState>
                                                                                                <vsm:VisualState x:Name="Pressed">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </vsm:VisualState>
                                                                                                <vsm:VisualState x:Name="Disabled"/>
                                                                                            </vsm:VisualStateGroup>
                                                                                            <vsm:VisualStateGroup x:Name="CheckStates">
                                                                                                <vsm:VisualState x:Name="Checked">
                                                                                                    <Storyboard>
                                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                                    </Storyboard>
                                                                                                </vsm:VisualState>
                                                                                                <vsm:VisualState x:Name="Unchecked"/>
                                                                                            </vsm:VisualStateGroup>
                                                                                            <vsm:VisualStateGroup x:Name="FocusStates">
                                                                                                <vsm:VisualState x:Name="Focused">
                                                                                                    <Storyboard/>
                                                                                                </vsm:VisualState>
                                                                                                <vsm:VisualState x:Name="Unfocused"/>
                                                                                            </vsm:VisualStateGroup>
                                                                                        </vsm:VisualStateManager.VisualStateGroups>
                                                                                        <Rectangle x:Name="Background" Fill="#FFFFFFFF" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="3" RadiusY="3"/>
                                                                                        <Rectangle x:Name="Highlight" IsHitTestVisible="false" Opacity="0" StrokeThickness="1" RadiusX="2" RadiusY="2" Margin="0,0,0,0"/>
                                                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                                                                    </Grid>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Grid.Resources>
                                                                <vsm:VisualStateManager.VisualStateGroups>
                                                                    <vsm:VisualStateGroup x:Name="CommonStates">
                                                                        <vsm:VisualState x:Name="Normal"/>
                                                                        <vsm:VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                        <vsm:VisualState x:Name="Disabled">
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value=".55"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                    </vsm:VisualStateGroup>
                                                                    <vsm:VisualStateGroup x:Name="FocusStates">
                                                                        <vsm:VisualState x:Name="Focused">
                                                                            <Storyboard>
                                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                        <vsm:VisualState x:Name="Unfocused"/>
                                                                        <vsm:VisualState x:Name="FocusedDropDown">
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="PopupBorder" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                                                    <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                                        <DiscreteObjectKeyFrame.Value>
                                                                                            <Visibility>Visible</Visibility>
                                                                                        </DiscreteObjectKeyFrame.Value>
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </vsm:VisualState>
                                                                    </vsm:VisualStateGroup>
                                                                </vsm:VisualStateManager.VisualStateGroups>
                                                                <Border x:Name="ContentPresenterBorder" BorderThickness="1,1,1,1" BorderBrush="{StaticResource BorderButton}" CornerRadius="0,0,0,0">
                                                                    <Grid>
                                                                        <ToggleButton HorizontalAlignment="Stretch" Margin="0" x:Name="DropDownToggle" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch" BorderThickness="{TemplateBinding BorderThickness}" HorizontalContentAlignment="Right">
                                                                            <Path Height="4" HorizontalAlignment="Right" Margin="0,0,6,0" x:Name="BtnArrow" Width="8" Stretch="Uniform" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z ">
                                                                                <Path.Fill>
                                                                                    <SolidColorBrush Color="#FF333333" x:Name="BtnArrowColor"/>
                                                                                </Path.Fill>
                                                                            </Path>
                                                                        </ToggleButton>
                                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="ContentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                            <TextBlock Text=" "/>
                                                                        </ContentPresenter>
                                                                    </Grid>
                                                                </Border>
                                                                <Rectangle x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Fill="White" RadiusX="3" RadiusY="3"/>
                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false"  StrokeThickness="1" Opacity="0" />
                                                                <Popup x:Name="Popup">
                                                                    <Border Height="Auto" HorizontalAlignment="Stretch" x:Name="PopupBorder"  BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0">
                                                                        <Border.Background>
                                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                                                <GradientStop Color="#FFFEFEFE" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Border.Background>

                                                                        <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
                                                                            <ItemsPresenter/>
                                                                        </ScrollViewer>

                                                                    </Border>
                                                                </Popup>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>


                                    </Grid>
                                </controlsToolkit:DockPanel>

                                <controlsToolkit:DockPanel x:Name="docHeader2" >
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <controlsToolkit:DockPanel   Name="doc4"  Margin="2" Grid.Column="0">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <Border Grid.Row="0"  controlsToolkit:DockPanel.Dock="Top" BorderBrush="{StaticResource TabControlDarkerBorder}" BorderThickness="1" CornerRadius="3,3,0,0" Background="Transparent">
                                                    <ContentControl VerticalAlignment="Center" FontSize="11" Margin="-3" Content="Sample Collection"  Style="{StaticResource Header}" HorizontalAlignment="Stretch" />
                                                </Border>
                                                <data:DataGrid Grid.Row="1" x:Name="dgCollectionList" AutoGenerateColumns="False" ItemsSource="{Binding}" VerticalScrollBarVisibility="Visible" IsReadOnly="True" Margin="0" HorizontalAlignment="Stretch" TabIndex="4" CanUserSortColumns="False" >
                                                    <data:DataGrid.Columns>
                                                        <!--<data:DataGridTemplateColumn Header="Select">
                                                        <data:DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <CheckBox x:Name="chkMachine" IsChecked="{Binding IsChecked,Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="Auto"></CheckBox>
                                                            </DataTemplate>
                                                        </data:DataGridTemplateColumn.CellTemplate>
                                                    </data:DataGridTemplateColumn>-->
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Date"  Binding="{Binding SampleCollectedDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='dd/MMM/yyyy'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Time"  Binding="{Binding SampleCollectedDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='hh:mm tt'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding SampleCollectedBy}"  Header="Collected By" ></data:DataGridTextColumn>
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding CollectionCenter}"  Header="Center Name" ></data:DataGridTextColumn>
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding Gestation}"  Header="Gestational Age" >
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Right"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding FastingStatusHrs}"  Header="Fasting Hrs" >
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Right"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>

                                                    </data:DataGrid.Columns>
                                                </data:DataGrid>
                                                <Border  Grid.Row="2" Visibility="Collapsed" controlsToolkit:DockPanel.Dock="Top" BorderBrush="{StaticResource TabControlDarkerBorder}" BorderThickness="1" CornerRadius="3,3,0,0" Background="Transparent">
                                                    <ContentControl VerticalAlignment="Center" FontSize="11" Margin="-3" Content="Sample Dispatch"  Style="{StaticResource Header}" HorizontalAlignment="Stretch" />
                                                </Border>
                                                <data:DataGrid Grid.Row="3" Visibility="Collapsed" x:Name="dgDispatchList" AutoGenerateColumns="False" ItemsSource="{Binding}" VerticalScrollBarVisibility="Visible" IsReadOnly="True" Margin="0" HorizontalAlignment="Stretch" TabIndex="4" CanUserSortColumns="False" >
                                                    <data:DataGrid.Columns>
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Date"  Binding="{Binding SampleDispatchDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='dd/MMM/yyyy'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Time"  Binding="{Binding SampleDispatchDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='hh:mm tt'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding DispatchBy}"  Header="Dispatched By" ></data:DataGridTextColumn>
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding DispatchToName}"  Header="Dispatched To" ></data:DataGridTextColumn>
                                                    </data:DataGrid.Columns>
                                                </data:DataGrid>
                                                <!--<data:DataPager Grid.Row="2" x:Name="dataGrid2Pager" Grid.Column="0" controlsToolkit:DockPanel.Dock="Bottom"  DisplayMode="FirstLastPreviousNext"  IsEnabled="True"                       
                                                        Source="{Binding}" NumericButtonCount="10"  AutoEllipsis="False" IsTotalItemCountFixed="True"/>-->

                                                <Border  Grid.Row="4" Visibility="Collapsed" controlsToolkit:DockPanel.Dock="Top" BorderBrush="{StaticResource TabControlDarkerBorder}" BorderThickness="1" CornerRadius="3,3,0,0" Background="Transparent">
                                                    <ContentControl VerticalAlignment="Center" FontSize="11" Margin="-3" Content="Sample Receipt"  Style="{StaticResource Header}" HorizontalAlignment="Stretch" />
                                                </Border>
                                                <data:DataGrid Visibility="Collapsed" Grid.Row="5" x:Name="dgReciveList" AutoGenerateColumns="False" ItemsSource="{Binding}" VerticalScrollBarVisibility="Visible" IsReadOnly="True" Margin="0" HorizontalAlignment="Stretch" TabIndex="4" CanUserSortColumns="False" >
                                                    <data:DataGrid.Columns>
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Date"  Binding="{Binding SampleReceivedDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='dd/MMM/yyyy'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Time"  Binding="{Binding SampleReceivedDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='hh:mm tt'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding SampleReceiveBy}"  Header="Received By" ></data:DataGridTextColumn>
                                                    </data:DataGrid.Columns>
                                                </data:DataGrid>

                                                <Border  Grid.Row="6" Visibility="Collapsed" controlsToolkit:DockPanel.Dock="Top" BorderBrush="{StaticResource TabControlDarkerBorder}" BorderThickness="1" CornerRadius="3,3,0,0" Background="Transparent">
                                                    <ContentControl VerticalAlignment="Center" FontSize="11" Margin="-3" Content="Sample Acceptance/Rejection" Style="{StaticResource Header}" HorizontalAlignment="Stretch" />
                                                </Border>

                                                <data:DataGrid Grid.Row="7" Visibility="Collapsed" x:Name="dgAcceptRejectList" AutoGenerateColumns="False" ItemsSource="{Binding}" VerticalScrollBarVisibility="Visible" IsReadOnly="True" Margin="0" HorizontalAlignment="Stretch" TabIndex="4" CanUserSortColumns="False" >
                                                    <data:DataGrid.Columns>
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Date"  Binding="{Binding SampleReceivedDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='dd/MMM/yyyy'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Time"  Binding="{Binding SampleReceivedDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='hh:mm tt'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <!--<data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Date"  Binding="{Binding SampleRejectionDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='dd/MMM/yyyy'}"></data:DataGridTextColumn>-->
                                                        <!--<data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Time"  Binding="{Binding SampleRejectionDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='hh:mm tt'}"></data:DataGridTextColumn>-->
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding AcceptedOrRejectedByName}"  Header="Accepted/Rejected By" ></data:DataGridTextColumn>

                                                        <data:DataGridTemplateColumn Header="Is Sub Optimal">
                                                            <data:DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <CheckBox x:Name="chkIsReflex" IsChecked="{Binding IsSubOptimal, Mode=TwoWay}" VerticalAlignment="Center"  HorizontalAlignment="Center" Width="Auto" IsEnabled="False" ></CheckBox>
                                                                </DataTemplate>
                                                            </data:DataGridTemplateColumn.CellTemplate>
                                                        </data:DataGridTemplateColumn>
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding Remark}"  Header="Remark" ></data:DataGridTextColumn>
                                                        <data:DataGridTemplateColumn Header="For Recollection">
                                                            <data:DataGridTemplateColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <CheckBox x:Name="chkIsReflex" IsChecked="{Binding IsResendForNewSample, Mode=TwoWay}" VerticalAlignment="Center"  HorizontalAlignment="Center" Width="Auto" IsEnabled="False" ></CheckBox>
                                                                </DataTemplate>
                                                            </data:DataGridTemplateColumn.CellTemplate>
                                                        </data:DataGridTemplateColumn>
                                                    </data:DataGrid.Columns>
                                                </data:DataGrid>

                                                <Border  Grid.Row="8"  controlsToolkit:DockPanel.Dock="Top" BorderBrush="{StaticResource TabControlDarkerBorder}" BorderThickness="1" CornerRadius="3,3,0,0" Background="Transparent">
                                                    <ContentControl VerticalAlignment="Center" FontSize="11" Margin="-3" Content="Outsource"  Style="{StaticResource Header}" HorizontalAlignment="Stretch" />
                                                </Border>

                                                <data:DataGrid Grid.Row="9" x:Name="dgOutsourceList" AutoGenerateColumns="False" ItemsSource="{Binding}" VerticalScrollBarVisibility="Visible" IsReadOnly="True" Margin="0" HorizontalAlignment="Stretch" TabIndex="4" CanUserSortColumns="False" >
                                                    <data:DataGrid.Columns>
                                                        <data:DataGridTextColumn Visibility="Collapsed" IsReadOnly="True"  Header="Date"  Binding="{Binding SampleAcceptanceDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='dd/MMM/yyyy'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn Visibility="Collapsed" IsReadOnly="True"  Header="Time"  Binding="{Binding SampleAcceptanceDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='hh:mm tt'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding AgencyName}"  Header="Agency" ></data:DataGridTextColumn>
                                                    </data:DataGrid.Columns>
                                                </data:DataGrid>
                                                <Border  Grid.Row="10"  controlsToolkit:DockPanel.Dock="Top" BorderBrush="{StaticResource TabControlDarkerBorder}" BorderThickness="1" CornerRadius="3,3,0,0" Background="Transparent">
                                                    <ContentControl VerticalAlignment="Center" FontSize="11" Margin="-3" Content="Result Entry" Style="{StaticResource Header}" HorizontalAlignment="Stretch" />
                                                </Border>

                                                <data:DataGrid Grid.Row="11" x:Name="dgResultEntryList" AutoGenerateColumns="False" ItemsSource="{Binding}" VerticalScrollBarVisibility="Visible" IsReadOnly="True" Margin="0" HorizontalAlignment="Stretch" TabIndex="4" CanUserSortColumns="False" >
                                                    <data:DataGrid.Columns>
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Date"  Binding="{Binding ResultDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='dd/MMM/yyyy'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Time"  Binding="{Binding ResultDateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='hh:mm tt'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>

                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding ResultEntryBy}"  Header="Result Entry By" ></data:DataGridTextColumn>
                                                    </data:DataGrid.Columns>
                                                </data:DataGrid>

                                                <Border  Grid.Row="12"  controlsToolkit:DockPanel.Dock="Top" BorderBrush="{StaticResource TabControlDarkerBorder}" BorderThickness="1" CornerRadius="3,3,0,0" Background="Transparent">
                                                    <ContentControl VerticalAlignment="Center" FontSize="11" Margin="-3" Content="Authorization" Style="{StaticResource Header}" HorizontalAlignment="Stretch" />
                                                </Border>
                                                <data:DataGrid Grid.Row="13" x:Name="dgAuthorizationList" AutoGenerateColumns="False" ItemsSource="{Binding}" VerticalScrollBarVisibility="Visible" IsReadOnly="True" Margin="0" HorizontalAlignment="Stretch" TabIndex="5" CanUserSortColumns="False" >
                                                    <data:DataGrid.Columns>
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Date"  Binding="{Binding ADateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='dd/MMM/yyyy'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Time"  Binding="{Binding ADateTime,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='hh:mm tt'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding ApproveBy}"  Header="Authorization By" ></data:DataGridTextColumn>
                                                    </data:DataGrid.Columns>
                                                </data:DataGrid>

                                                <Border  Grid.Row="14"  controlsToolkit:DockPanel.Dock="Top" BorderBrush="{StaticResource TabControlDarkerBorder}" BorderThickness="1" CornerRadius="3,3,0,0" Background="Transparent">
                                                    <ContentControl VerticalAlignment="Center" FontSize="11" Margin="-3" Content="Result Value Edit History Deatils" Style="{StaticResource Header}" HorizontalAlignment="Stretch" />
                                                </Border>
                                                <data:DataGrid Grid.Row="15" x:Name="dgHistoryList" AutoGenerateColumns="False" ItemsSource="{Binding}" VerticalScrollBarVisibility="Visible" IsReadOnly="True" Margin="0" HorizontalAlignment="Stretch" TabIndex="5" CanUserSortColumns="False" >
                                                    <data:DataGrid.Columns>
                                                        <data:DataGridTextColumn Visibility="Visible" IsReadOnly="True"  Header="Date"  Binding="{Binding DateTimeNow,Mode=TwoWay,Converter={StaticResource DateConverter},ConverterParameter='dd/MMM/yyyy'}">
                                                            <data:DataGridTextColumn.ElementStyle>
                                                                <Style TargetType="TextBlock">
                                                                    <Setter Property="TextAlignment" Value="Center"/>
                                                                </Style>
                                                            </data:DataGridTextColumn.ElementStyle>
                                                        </data:DataGridTextColumn>
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding UserName}"  Header="User Name" ></data:DataGridTextColumn>
                                                        <data:DataGridTextColumn IsReadOnly="True"  Binding="{Binding Reason}"  Header="Reason For Edit" ></data:DataGridTextColumn>
                                                    </data:DataGrid.Columns>
                                                </data:DataGrid>
                                            </Grid>
                                        </controlsToolkit:DockPanel>



                                    </Grid>
                                </controlsToolkit:DockPanel>
                            </controlsToolkit:DockPanel>
                        </Border>

                    </controlsToolkit:DockPanel>

                </controlsToolkit:DockPanel>

            </Grid>
        </ScrollViewer>

    </Grid>

</controls:ChildWindow>