//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace PalashDynamics.Web.PalashActivationRef {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateActivationKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActivationKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateClientActivationTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterClientOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::PalashDynamics.Web.Properties.Settings.Default.PalashDynamics_Web_PalashActivationRef_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GenerateActivationKeyCompletedEventHandler GenerateActivationKeyCompleted;
        
        /// <remarks/>
        public event UpdateClientCompletedEventHandler UpdateClientCompleted;
        
        /// <remarks/>
        public event GetActivationKeyCompletedEventHandler GetActivationKeyCompleted;
        
        /// <remarks/>
        public event UpdateClientActivationTimeCompletedEventHandler UpdateClientActivationTimeCompleted;
        
        /// <remarks/>
        public event RegisterClientCompletedEventHandler RegisterClientCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateActivationKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GenerateActivationKey(string UserKey) {
            object[] results = this.Invoke("GenerateActivationKey", new object[] {
                        UserKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateActivationKeyAsync(string UserKey) {
            this.GenerateActivationKeyAsync(UserKey, null);
        }
        
        /// <remarks/>
        public void GenerateActivationKeyAsync(string UserKey, object userState) {
            if ((this.GenerateActivationKeyOperationCompleted == null)) {
                this.GenerateActivationKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateActivationKeyOperationCompleted);
            }
            this.InvokeAsync("GenerateActivationKey", new object[] {
                        UserKey}, this.GenerateActivationKeyOperationCompleted, userState);
        }
        
        private void OnGenerateActivationKeyOperationCompleted(object arg) {
            if ((this.GenerateActivationKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateActivationKeyCompleted(this, new GenerateActivationKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateClient(string ActivationKey, long Code) {
            object[] results = this.Invoke("UpdateClient", new object[] {
                        ActivationKey,
                        Code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClientAsync(string ActivationKey, long Code) {
            this.UpdateClientAsync(ActivationKey, Code, null);
        }
        
        /// <remarks/>
        public void UpdateClientAsync(string ActivationKey, long Code, object userState) {
            if ((this.UpdateClientOperationCompleted == null)) {
                this.UpdateClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientOperationCompleted);
            }
            this.InvokeAsync("UpdateClient", new object[] {
                        ActivationKey,
                        Code}, this.UpdateClientOperationCompleted, userState);
        }
        
        private void OnUpdateClientOperationCompleted(object arg) {
            if ((this.UpdateClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientCompleted(this, new UpdateClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetActivationKey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetActivationKey(long Code) {
            object[] results = this.Invoke("GetActivationKey", new object[] {
                        Code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetActivationKeyAsync(long Code) {
            this.GetActivationKeyAsync(Code, null);
        }
        
        /// <remarks/>
        public void GetActivationKeyAsync(long Code, object userState) {
            if ((this.GetActivationKeyOperationCompleted == null)) {
                this.GetActivationKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActivationKeyOperationCompleted);
            }
            this.InvokeAsync("GetActivationKey", new object[] {
                        Code}, this.GetActivationKeyOperationCompleted, userState);
        }
        
        private void OnGetActivationKeyOperationCompleted(object arg) {
            if ((this.GetActivationKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActivationKeyCompleted(this, new GetActivationKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateClientActivationTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateClientActivationTime(System.DateTime ActivationDateTime, long Code) {
            object[] results = this.Invoke("UpdateClientActivationTime", new object[] {
                        ActivationDateTime,
                        Code});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateClientActivationTimeAsync(System.DateTime ActivationDateTime, long Code) {
            this.UpdateClientActivationTimeAsync(ActivationDateTime, Code, null);
        }
        
        /// <remarks/>
        public void UpdateClientActivationTimeAsync(System.DateTime ActivationDateTime, long Code, object userState) {
            if ((this.UpdateClientActivationTimeOperationCompleted == null)) {
                this.UpdateClientActivationTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateClientActivationTimeOperationCompleted);
            }
            this.InvokeAsync("UpdateClientActivationTime", new object[] {
                        ActivationDateTime,
                        Code}, this.UpdateClientActivationTimeOperationCompleted, userState);
        }
        
        private void OnUpdateClientActivationTimeOperationCompleted(object arg) {
            if ((this.UpdateClientActivationTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateClientActivationTimeCompleted(this, new UpdateClientActivationTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterClient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long RegisterClient(
                    string ClientName, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string AddressLine3, 
                    string Country, 
                    string State, 
                    string District, 
                    string Taluka, 
                    string City, 
                    string Area, 
                    string PinCode, 
                    int ResiCountryCode, 
                    int ResiSTDCode, 
                    string ContactNo, 
                    string FaxNo, 
                    string EmailId, 
                    System.DateTime RegistrationDateTime, 
                    string ClientKey) {
            object[] results = this.Invoke("RegisterClient", new object[] {
                        ClientName,
                        AddressLine1,
                        AddressLine2,
                        AddressLine3,
                        Country,
                        State,
                        District,
                        Taluka,
                        City,
                        Area,
                        PinCode,
                        ResiCountryCode,
                        ResiSTDCode,
                        ContactNo,
                        FaxNo,
                        EmailId,
                        RegistrationDateTime,
                        ClientKey});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterClientAsync(
                    string ClientName, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string AddressLine3, 
                    string Country, 
                    string State, 
                    string District, 
                    string Taluka, 
                    string City, 
                    string Area, 
                    string PinCode, 
                    int ResiCountryCode, 
                    int ResiSTDCode, 
                    string ContactNo, 
                    string FaxNo, 
                    string EmailId, 
                    System.DateTime RegistrationDateTime, 
                    string ClientKey) {
            this.RegisterClientAsync(ClientName, AddressLine1, AddressLine2, AddressLine3, Country, State, District, Taluka, City, Area, PinCode, ResiCountryCode, ResiSTDCode, ContactNo, FaxNo, EmailId, RegistrationDateTime, ClientKey, null);
        }
        
        /// <remarks/>
        public void RegisterClientAsync(
                    string ClientName, 
                    string AddressLine1, 
                    string AddressLine2, 
                    string AddressLine3, 
                    string Country, 
                    string State, 
                    string District, 
                    string Taluka, 
                    string City, 
                    string Area, 
                    string PinCode, 
                    int ResiCountryCode, 
                    int ResiSTDCode, 
                    string ContactNo, 
                    string FaxNo, 
                    string EmailId, 
                    System.DateTime RegistrationDateTime, 
                    string ClientKey, 
                    object userState) {
            if ((this.RegisterClientOperationCompleted == null)) {
                this.RegisterClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterClientOperationCompleted);
            }
            this.InvokeAsync("RegisterClient", new object[] {
                        ClientName,
                        AddressLine1,
                        AddressLine2,
                        AddressLine3,
                        Country,
                        State,
                        District,
                        Taluka,
                        City,
                        Area,
                        PinCode,
                        ResiCountryCode,
                        ResiSTDCode,
                        ContactNo,
                        FaxNo,
                        EmailId,
                        RegistrationDateTime,
                        ClientKey}, this.RegisterClientOperationCompleted, userState);
        }
        
        private void OnRegisterClientOperationCompleted(object arg) {
            if ((this.RegisterClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterClientCompleted(this, new RegisterClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GenerateActivationKeyCompletedEventHandler(object sender, GenerateActivationKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateActivationKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateActivationKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateClientCompletedEventHandler(object sender, UpdateClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetActivationKeyCompletedEventHandler(object sender, GetActivationKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActivationKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActivationKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateClientActivationTimeCompletedEventHandler(object sender, UpdateClientActivationTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateClientActivationTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateClientActivationTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RegisterClientCompletedEventHandler(object sender, RegisterClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591