//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace PalashDynamics.Service.DataTemplateHttpsServiceRef {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EMRTemplate", Namespace="http://schemas.datacontract.org/2004/07/PalashDynamics.Web.EMR")]
    public partial class EMRTemplate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string TemplateField;
        
        private long TemplateIdField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Template {
            get {
                return this.TemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateField, value) != true)) {
                    this.TemplateField = value;
                    this.RaisePropertyChanged("Template");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TemplateId {
            get {
                return this.TemplateIdField;
            }
            set {
                if ((this.TemplateIdField.Equals(value) != true)) {
                    this.TemplateIdField = value;
                    this.RaisePropertyChanged("TemplateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
    public partial class ConcurrencyException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DetailsField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IntraTemplateRelation", Namespace="http://schemas.datacontract.org/2004/07/PalashDynamics.Web.EMR")]
    public partial class IntraTemplateRelation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ConditionField;
        
        private long RelationIdField;
        
        private string SourceFieldIdField;
        
        private string SourceSectionIdField;
        
        private string TargetFieldIdField;
        
        private string TargetSectionIdField;
        
        private long TemplateIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Condition {
            get {
                return this.ConditionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionField, value) != true)) {
                    this.ConditionField = value;
                    this.RaisePropertyChanged("Condition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RelationId {
            get {
                return this.RelationIdField;
            }
            set {
                if ((this.RelationIdField.Equals(value) != true)) {
                    this.RelationIdField = value;
                    this.RaisePropertyChanged("RelationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceFieldId {
            get {
                return this.SourceFieldIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceFieldIdField, value) != true)) {
                    this.SourceFieldIdField = value;
                    this.RaisePropertyChanged("SourceFieldId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceSectionId {
            get {
                return this.SourceSectionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceSectionIdField, value) != true)) {
                    this.SourceSectionIdField = value;
                    this.RaisePropertyChanged("SourceSectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetFieldId {
            get {
                return this.TargetFieldIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetFieldIdField, value) != true)) {
                    this.TargetFieldIdField = value;
                    this.RaisePropertyChanged("TargetFieldId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetSectionId {
            get {
                return this.TargetSectionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetSectionIdField, value) != true)) {
                    this.TargetSectionIdField = value;
                    this.RaisePropertyChanged("TargetSectionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TemplateId {
            get {
                return this.TemplateIdField;
            }
            set {
                if ((this.TemplateIdField.Equals(value) != true)) {
                    this.TemplateIdField = value;
                    this.RaisePropertyChanged("TemplateId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientEMRData", Namespace="http://schemas.datacontract.org/2004/07/PalashDynamics.Web.EMR")]
    public partial class PatientEMRData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long IdField;
        
        private long PatientIdField;
        
        private string SavedByField;
        
        private string TemplateField;
        
        private long TemplateIdField;
        
        private System.Nullable<long> VisitIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SavedBy {
            get {
                return this.SavedByField;
            }
            set {
                if ((object.ReferenceEquals(this.SavedByField, value) != true)) {
                    this.SavedByField = value;
                    this.RaisePropertyChanged("SavedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Template {
            get {
                return this.TemplateField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateField, value) != true)) {
                    this.TemplateField = value;
                    this.RaisePropertyChanged("Template");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TemplateId {
            get {
                return this.TemplateIdField;
            }
            set {
                if ((this.TemplateIdField.Equals(value) != true)) {
                    this.TemplateIdField = value;
                    this.RaisePropertyChanged("TemplateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VisitId {
            get {
                return this.VisitIdField;
            }
            set {
                if ((this.VisitIdField.Equals(value) != true)) {
                    this.VisitIdField = value;
                    this.RaisePropertyChanged("VisitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Variance", Namespace="http://schemas.datacontract.org/2004/07/PalashDynamics.Web.EMR")]
    public partial class Variance : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long ClinicIdField;
        
        private System.DateTime DateField;
        
        private long DoctorIdField;
        
        private string ListVariance1Field;
        
        private string ListVariance2Field;
        
        private string ListVariance3Field;
        
        private string ListVariance4Field;
        
        private string ListVariance5Field;
        
        private string ListVariance6Field;
        
        private string ListVariance7Field;
        
        private long PatientIdField;
        
        private string Variance1Field;
        
        private string Variance2Field;
        
        private string Variance3Field;
        
        private string Variance4Field;
        
        private string Variance5Field;
        
        private string Variance6Field;
        
        private string Variance7Field;
        
        private long VarianceIdField;
        
        private System.Nullable<long> VisitIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClinicId {
            get {
                return this.ClinicIdField;
            }
            set {
                if ((this.ClinicIdField.Equals(value) != true)) {
                    this.ClinicIdField = value;
                    this.RaisePropertyChanged("ClinicId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DoctorId {
            get {
                return this.DoctorIdField;
            }
            set {
                if ((this.DoctorIdField.Equals(value) != true)) {
                    this.DoctorIdField = value;
                    this.RaisePropertyChanged("DoctorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVariance1 {
            get {
                return this.ListVariance1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ListVariance1Field, value) != true)) {
                    this.ListVariance1Field = value;
                    this.RaisePropertyChanged("ListVariance1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVariance2 {
            get {
                return this.ListVariance2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ListVariance2Field, value) != true)) {
                    this.ListVariance2Field = value;
                    this.RaisePropertyChanged("ListVariance2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVariance3 {
            get {
                return this.ListVariance3Field;
            }
            set {
                if ((object.ReferenceEquals(this.ListVariance3Field, value) != true)) {
                    this.ListVariance3Field = value;
                    this.RaisePropertyChanged("ListVariance3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVariance4 {
            get {
                return this.ListVariance4Field;
            }
            set {
                if ((object.ReferenceEquals(this.ListVariance4Field, value) != true)) {
                    this.ListVariance4Field = value;
                    this.RaisePropertyChanged("ListVariance4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVariance5 {
            get {
                return this.ListVariance5Field;
            }
            set {
                if ((object.ReferenceEquals(this.ListVariance5Field, value) != true)) {
                    this.ListVariance5Field = value;
                    this.RaisePropertyChanged("ListVariance5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVariance6 {
            get {
                return this.ListVariance6Field;
            }
            set {
                if ((object.ReferenceEquals(this.ListVariance6Field, value) != true)) {
                    this.ListVariance6Field = value;
                    this.RaisePropertyChanged("ListVariance6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListVariance7 {
            get {
                return this.ListVariance7Field;
            }
            set {
                if ((object.ReferenceEquals(this.ListVariance7Field, value) != true)) {
                    this.ListVariance7Field = value;
                    this.RaisePropertyChanged("ListVariance7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((this.PatientIdField.Equals(value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variance1 {
            get {
                return this.Variance1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Variance1Field, value) != true)) {
                    this.Variance1Field = value;
                    this.RaisePropertyChanged("Variance1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variance2 {
            get {
                return this.Variance2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Variance2Field, value) != true)) {
                    this.Variance2Field = value;
                    this.RaisePropertyChanged("Variance2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variance3 {
            get {
                return this.Variance3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Variance3Field, value) != true)) {
                    this.Variance3Field = value;
                    this.RaisePropertyChanged("Variance3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variance4 {
            get {
                return this.Variance4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Variance4Field, value) != true)) {
                    this.Variance4Field = value;
                    this.RaisePropertyChanged("Variance4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variance5 {
            get {
                return this.Variance5Field;
            }
            set {
                if ((object.ReferenceEquals(this.Variance5Field, value) != true)) {
                    this.Variance5Field = value;
                    this.RaisePropertyChanged("Variance5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variance6 {
            get {
                return this.Variance6Field;
            }
            set {
                if ((object.ReferenceEquals(this.Variance6Field, value) != true)) {
                    this.Variance6Field = value;
                    this.RaisePropertyChanged("Variance6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Variance7 {
            get {
                return this.Variance7Field;
            }
            set {
                if ((object.ReferenceEquals(this.Variance7Field, value) != true)) {
                    this.Variance7Field = value;
                    this.RaisePropertyChanged("Variance7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long VarianceId {
            get {
                return this.VarianceIdField;
            }
            set {
                if ((this.VarianceIdField.Equals(value) != true)) {
                    this.VarianceIdField = value;
                    this.RaisePropertyChanged("VarianceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> VisitId {
            get {
                return this.VisitIdField;
            }
            set {
                if ((this.VisitIdField.Equals(value) != true)) {
                    this.VisitIdField = value;
                    this.RaisePropertyChanged("VisitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="DataTemplateHttpsServiceRef.DataTemplateHttpsService")]
    public interface DataTemplateHttpsService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/DoWork", ReplyAction="urn:DataTemplateHttpsService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/SaveTemplate", ReplyAction="urn:DataTemplateHttpsService/SaveTemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/SaveTemplateConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginSaveTemplate(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template, System.AsyncCallback callback, object asyncState);
        
        int EndSaveTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/UpdateTemplate", ReplyAction="urn:DataTemplateHttpsService/UpdateTemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/UpdateTemplateConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginUpdateTemplate(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template, System.AsyncCallback callback, object asyncState);
        
        int EndUpdateTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/DeleteTemplate", ReplyAction="urn:DataTemplateHttpsService/DeleteTemplateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/DeleteTemplateConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginDeleteTemplate(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template, System.AsyncCallback callback, object asyncState);
        
        int EndDeleteTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/GetTemplatesDetailsByTemplateTitle", ReplyAction="urn:DataTemplateHttpsService/GetTemplatesDetailsByTemplateTitleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/GetTemplatesDetailsByTemplateTitleConcurrencyExcepti" +
            "onFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginGetTemplatesDetailsByTemplateTitle(long TemplateId, System.AsyncCallback callback, object asyncState);
        
        PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate EndGetTemplatesDetailsByTemplateTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/GetTemplatesList", ReplyAction="urn:DataTemplateHttpsService/GetTemplatesListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/GetTemplatesListConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginGetTemplatesList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate> EndGetTemplatesList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/GetRelationList", ReplyAction="urn:DataTemplateHttpsService/GetRelationListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/GetRelationListConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginGetRelationList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.IntraTemplateRelation> EndGetRelationList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/SavePatientEMR", ReplyAction="urn:DataTemplateHttpsService/SavePatientEMRResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/SavePatientEMRConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginSavePatientEMR(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMR, System.AsyncCallback callback, object asyncState);
        
        int EndSavePatientEMR(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/SavePatientEMR1", ReplyAction="urn:DataTemplateHttpsService/SavePatientEMR1Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/SavePatientEMR1ConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginSavePatientEMR1(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMRData, System.AsyncCallback callback, object asyncState);
        
        int EndSavePatientEMR1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/UpdatePatientEMR", ReplyAction="urn:DataTemplateHttpsService/UpdatePatientEMRResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/UpdatePatientEMRConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginUpdatePatientEMR(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMR, System.AsyncCallback callback, object asyncState);
        
        int EndUpdatePatientEMR(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/GetPatientEMRByPatientIdAndTemplateId", ReplyAction="urn:DataTemplateHttpsService/GetPatientEMRByPatientIdAndTemplateIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/GetPatientEMRByPatientIdAndTemplateIdConcurrencyExce" +
            "ptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginGetPatientEMRByPatientIdAndTemplateId(long PatientId, long TemplateId, long VisitId, System.AsyncCallback callback, object asyncState);
        
        PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData EndGetPatientEMRByPatientIdAndTemplateId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/GetFileList", ReplyAction="urn:DataTemplateHttpsService/GetFileListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/GetFileListConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginGetFileList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetFileList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/GetFilePath", ReplyAction="urn:DataTemplateHttpsService/GetFilePathResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/GetFilePathConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginGetFilePath(System.AsyncCallback callback, object asyncState);
        
        string EndGetFilePath(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/UploadFile", ReplyAction="urn:DataTemplateHttpsService/UploadFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/UploadFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginUploadFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndUploadFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/DeletePathReportFile", ReplyAction="urn:DataTemplateHttpsService/DeletePathReportFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/DeletePathReportFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginDeletePathReportFile(string fileName, System.AsyncCallback callback, object asyncState);
        
        void EndDeletePathReportFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/UploadReportFileForPathology", ReplyAction="urn:DataTemplateHttpsService/UploadReportFileForPathologyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/UploadReportFileForPathologyConcurrencyExceptionFaul" +
            "t", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginUploadReportFileForPathology(string fileName, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndUploadReportFileForPathology(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/AttachmentFile", ReplyAction="urn:DataTemplateHttpsService/AttachmentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/AttachmentFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginAttachmentFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndAttachmentFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/DeleteAttachmentFile", ReplyAction="urn:DataTemplateHttpsService/DeleteAttachmentFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/DeleteAttachmentFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginDeleteAttachmentFile(string fileName, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAttachmentFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/ActivationFile", ReplyAction="urn:DataTemplateHttpsService/ActivationFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/ActivationFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginActivationFile(string FileData, System.AsyncCallback callback, object asyncState);
        
        string EndActivationFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/GetApplicationPath", ReplyAction="urn:DataTemplateHttpsService/GetApplicationPathResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/GetApplicationPathConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginGetApplicationPath(System.AsyncCallback callback, object asyncState);
        
        string EndGetApplicationPath(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/GetActivationFile", ReplyAction="urn:DataTemplateHttpsService/GetActivationFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/GetActivationFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginGetActivationFile(string FileName, System.AsyncCallback callback, object asyncState);
        
        string EndGetActivationFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/UploadReportFile", ReplyAction="urn:DataTemplateHttpsService/UploadReportFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/UploadReportFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginUploadReportFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndUploadReportFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/UploadReportFileForRadiology", ReplyAction="urn:DataTemplateHttpsService/UploadReportFileForRadiologyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/UploadReportFileForRadiologyConcurrencyExceptionFaul" +
            "t", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginUploadReportFileForRadiology(string fileName, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndUploadReportFileForRadiology(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/UploadReportFileForDischarge", ReplyAction="urn:DataTemplateHttpsService/UploadReportFileForDischargeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/UploadReportFileForDischargeConcurrencyExceptionFaul" +
            "t", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginUploadReportFileForDischarge(string fileName, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndUploadReportFileForDischarge(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/UploadReportFileForConsent", ReplyAction="urn:DataTemplateHttpsService/UploadReportFileForConsentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/UploadReportFileForConsentConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginUploadReportFileForConsent(string fileName, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndUploadReportFileForConsent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/UploadReportFileForMLCase", ReplyAction="urn:DataTemplateHttpsService/UploadReportFileForMLCaseResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/UploadReportFileForMLCaseConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginUploadReportFileForMLCase(string fileName, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndUploadReportFileForMLCase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/GlobalUploadFile", ReplyAction="urn:DataTemplateHttpsService/GlobalUploadFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/GlobalUploadFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginGlobalUploadFile(string RelativePath, string fileName, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndGlobalUploadFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/GlobalDeleteFile", ReplyAction="urn:DataTemplateHttpsService/GlobalDeleteFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/GlobalDeleteFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginGlobalDeleteFile(string RelativePath, System.Collections.ObjectModel.ObservableCollection<string> fileName, System.AsyncCallback callback, object asyncState);
        
        void EndGlobalDeleteFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/UploadETemplateFile", ReplyAction="urn:DataTemplateHttpsService/UploadETemplateFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/UploadETemplateFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginUploadETemplateFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndUploadETemplateFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/DeleteReportFile", ReplyAction="urn:DataTemplateHttpsService/DeleteReportFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/DeleteReportFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginDeleteReportFile(System.Collections.ObjectModel.ObservableCollection<string> fileName, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteReportFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/DeleteMISReportFile", ReplyAction="urn:DataTemplateHttpsService/DeleteMISReportFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/DeleteMISReportFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginDeleteMISReportFile(string FolderPath, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteMISReportFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/SaveVariance", ReplyAction="urn:DataTemplateHttpsService/SaveVarianceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/SaveVarianceConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginSaveVariance(PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance variance, System.AsyncCallback callback, object asyncState);
        
        int EndSaveVariance(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/GetVarinceList", ReplyAction="urn:DataTemplateHttpsService/GetVarinceListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/GetVarinceListConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginGetVarinceList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance> EndGetVarinceList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/GetPatientEMRList", ReplyAction="urn:DataTemplateHttpsService/GetPatientEMRListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/GetPatientEMRListConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginGetPatientEMRList(long PatientId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData> EndGetPatientEMRList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/OpenCreatedRadReport", ReplyAction="urn:DataTemplateHttpsService/OpenCreatedRadReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/OpenCreatedRadReportConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginOpenCreatedRadReport(string fileName, System.AsyncCallback callback, object asyncState);
        
        byte[] EndOpenCreatedRadReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:DataTemplateHttpsService/UploadSOPFile", ReplyAction="urn:DataTemplateHttpsService/UploadSOPFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(PalashDynamics.Service.DataTemplateHttpsServiceRef.ConcurrencyException), Action="urn:DataTemplateHttpsService/UploadSOPFileConcurrencyExceptionFault", Name="ConcurrencyException", Namespace="http://schemas.datacontract.org/2004/07/WcfExceptionExample.Web.DataContracts")]
        System.IAsyncResult BeginUploadSOPFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndUploadSOPFile(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DataTemplateHttpsServiceChannel : PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTemplatesDetailsByTemplateTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTemplatesDetailsByTemplateTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTemplatesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTemplatesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRelationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRelationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.IntraTemplateRelation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.IntraTemplateRelation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SavePatientEMRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SavePatientEMRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SavePatientEMR1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SavePatientEMR1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdatePatientEMRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePatientEMRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPatientEMRByPatientIdAndTemplateIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPatientEMRByPatientIdAndTemplateIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActivationFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ActivationFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetApplicationPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetApplicationPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetActivationFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetActivationFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveVarianceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveVarianceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVarinceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVarinceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPatientEMRListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPatientEMRListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpenCreatedRadReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OpenCreatedRadReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataTemplateHttpsServiceClient : System.ServiceModel.ClientBase<PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService>, PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTemplateDelegate;
        
        private EndOperationDelegate onEndSaveTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTemplateDelegate;
        
        private EndOperationDelegate onEndUpdateTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTemplateDelegate;
        
        private EndOperationDelegate onEndDeleteTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTemplatesDetailsByTemplateTitleDelegate;
        
        private EndOperationDelegate onEndGetTemplatesDetailsByTemplateTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGetTemplatesDetailsByTemplateTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTemplatesListDelegate;
        
        private EndOperationDelegate onEndGetTemplatesListDelegate;
        
        private System.Threading.SendOrPostCallback onGetTemplatesListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRelationListDelegate;
        
        private EndOperationDelegate onEndGetRelationListDelegate;
        
        private System.Threading.SendOrPostCallback onGetRelationListCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePatientEMRDelegate;
        
        private EndOperationDelegate onEndSavePatientEMRDelegate;
        
        private System.Threading.SendOrPostCallback onSavePatientEMRCompletedDelegate;
        
        private BeginOperationDelegate onBeginSavePatientEMR1Delegate;
        
        private EndOperationDelegate onEndSavePatientEMR1Delegate;
        
        private System.Threading.SendOrPostCallback onSavePatientEMR1CompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePatientEMRDelegate;
        
        private EndOperationDelegate onEndUpdatePatientEMRDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePatientEMRCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPatientEMRByPatientIdAndTemplateIdDelegate;
        
        private EndOperationDelegate onEndGetPatientEMRByPatientIdAndTemplateIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetPatientEMRByPatientIdAndTemplateIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFileListDelegate;
        
        private EndOperationDelegate onEndGetFileListDelegate;
        
        private System.Threading.SendOrPostCallback onGetFileListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFilePathDelegate;
        
        private EndOperationDelegate onEndGetFilePathDelegate;
        
        private System.Threading.SendOrPostCallback onGetFilePathCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadFileDelegate;
        
        private EndOperationDelegate onEndUploadFileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeletePathReportFileDelegate;
        
        private EndOperationDelegate onEndDeletePathReportFileDelegate;
        
        private System.Threading.SendOrPostCallback onDeletePathReportFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadReportFileForPathologyDelegate;
        
        private EndOperationDelegate onEndUploadReportFileForPathologyDelegate;
        
        private System.Threading.SendOrPostCallback onUploadReportFileForPathologyCompletedDelegate;
        
        private BeginOperationDelegate onBeginAttachmentFileDelegate;
        
        private EndOperationDelegate onEndAttachmentFileDelegate;
        
        private System.Threading.SendOrPostCallback onAttachmentFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAttachmentFileDelegate;
        
        private EndOperationDelegate onEndDeleteAttachmentFileDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAttachmentFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginActivationFileDelegate;
        
        private EndOperationDelegate onEndActivationFileDelegate;
        
        private System.Threading.SendOrPostCallback onActivationFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetApplicationPathDelegate;
        
        private EndOperationDelegate onEndGetApplicationPathDelegate;
        
        private System.Threading.SendOrPostCallback onGetApplicationPathCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetActivationFileDelegate;
        
        private EndOperationDelegate onEndGetActivationFileDelegate;
        
        private System.Threading.SendOrPostCallback onGetActivationFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadReportFileDelegate;
        
        private EndOperationDelegate onEndUploadReportFileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadReportFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadReportFileForRadiologyDelegate;
        
        private EndOperationDelegate onEndUploadReportFileForRadiologyDelegate;
        
        private System.Threading.SendOrPostCallback onUploadReportFileForRadiologyCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadReportFileForDischargeDelegate;
        
        private EndOperationDelegate onEndUploadReportFileForDischargeDelegate;
        
        private System.Threading.SendOrPostCallback onUploadReportFileForDischargeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadReportFileForConsentDelegate;
        
        private EndOperationDelegate onEndUploadReportFileForConsentDelegate;
        
        private System.Threading.SendOrPostCallback onUploadReportFileForConsentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadReportFileForMLCaseDelegate;
        
        private EndOperationDelegate onEndUploadReportFileForMLCaseDelegate;
        
        private System.Threading.SendOrPostCallback onUploadReportFileForMLCaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGlobalUploadFileDelegate;
        
        private EndOperationDelegate onEndGlobalUploadFileDelegate;
        
        private System.Threading.SendOrPostCallback onGlobalUploadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGlobalDeleteFileDelegate;
        
        private EndOperationDelegate onEndGlobalDeleteFileDelegate;
        
        private System.Threading.SendOrPostCallback onGlobalDeleteFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadETemplateFileDelegate;
        
        private EndOperationDelegate onEndUploadETemplateFileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadETemplateFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteReportFileDelegate;
        
        private EndOperationDelegate onEndDeleteReportFileDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteReportFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMISReportFileDelegate;
        
        private EndOperationDelegate onEndDeleteMISReportFileDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMISReportFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveVarianceDelegate;
        
        private EndOperationDelegate onEndSaveVarianceDelegate;
        
        private System.Threading.SendOrPostCallback onSaveVarianceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVarinceListDelegate;
        
        private EndOperationDelegate onEndGetVarinceListDelegate;
        
        private System.Threading.SendOrPostCallback onGetVarinceListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPatientEMRListDelegate;
        
        private EndOperationDelegate onEndGetPatientEMRListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPatientEMRListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenCreatedRadReportDelegate;
        
        private EndOperationDelegate onEndOpenCreatedRadReportDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCreatedRadReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadSOPFileDelegate;
        
        private EndOperationDelegate onEndUploadSOPFileDelegate;
        
        private System.Threading.SendOrPostCallback onUploadSOPFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DataTemplateHttpsServiceClient() {
        }
        
        public DataTemplateHttpsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataTemplateHttpsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataTemplateHttpsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataTemplateHttpsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<SaveTemplateCompletedEventArgs> SaveTemplateCompleted;
        
        public event System.EventHandler<UpdateTemplateCompletedEventArgs> UpdateTemplateCompleted;
        
        public event System.EventHandler<DeleteTemplateCompletedEventArgs> DeleteTemplateCompleted;
        
        public event System.EventHandler<GetTemplatesDetailsByTemplateTitleCompletedEventArgs> GetTemplatesDetailsByTemplateTitleCompleted;
        
        public event System.EventHandler<GetTemplatesListCompletedEventArgs> GetTemplatesListCompleted;
        
        public event System.EventHandler<GetRelationListCompletedEventArgs> GetRelationListCompleted;
        
        public event System.EventHandler<SavePatientEMRCompletedEventArgs> SavePatientEMRCompleted;
        
        public event System.EventHandler<SavePatientEMR1CompletedEventArgs> SavePatientEMR1Completed;
        
        public event System.EventHandler<UpdatePatientEMRCompletedEventArgs> UpdatePatientEMRCompleted;
        
        public event System.EventHandler<GetPatientEMRByPatientIdAndTemplateIdCompletedEventArgs> GetPatientEMRByPatientIdAndTemplateIdCompleted;
        
        public event System.EventHandler<GetFileListCompletedEventArgs> GetFileListCompleted;
        
        public event System.EventHandler<GetFilePathCompletedEventArgs> GetFilePathCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeletePathReportFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadReportFileForPathologyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AttachmentFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAttachmentFileCompleted;
        
        public event System.EventHandler<ActivationFileCompletedEventArgs> ActivationFileCompleted;
        
        public event System.EventHandler<GetApplicationPathCompletedEventArgs> GetApplicationPathCompleted;
        
        public event System.EventHandler<GetActivationFileCompletedEventArgs> GetActivationFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadReportFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadReportFileForRadiologyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadReportFileForDischargeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadReportFileForConsentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadReportFileForMLCaseCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GlobalUploadFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GlobalDeleteFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadETemplateFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteReportFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteMISReportFileCompleted;
        
        public event System.EventHandler<SaveVarianceCompletedEventArgs> SaveVarianceCompleted;
        
        public event System.EventHandler<GetVarinceListCompletedEventArgs> GetVarinceListCompleted;
        
        public event System.EventHandler<GetPatientEMRListCompletedEventArgs> GetPatientEMRListCompleted;
        
        public event System.EventHandler<OpenCreatedRadReportCompletedEventArgs> OpenCreatedRadReportCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadSOPFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginSaveTemplate(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTemplate(template, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndSaveTemplate(System.IAsyncResult result) {
            return base.Channel.EndSaveTemplate(result);
        }
        
        private System.IAsyncResult OnBeginSaveTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginSaveTemplate(template, callback, asyncState);
        }
        
        private object[] OnEndSaveTemplate(System.IAsyncResult result) {
            int retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndSaveTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveTemplateCompleted(object state) {
            if ((this.SaveTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTemplateCompleted(this, new SaveTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTemplateAsync(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template) {
            this.SaveTemplateAsync(template, null);
        }
        
        public void SaveTemplateAsync(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template, object userState) {
            if ((this.onBeginSaveTemplateDelegate == null)) {
                this.onBeginSaveTemplateDelegate = new BeginOperationDelegate(this.OnBeginSaveTemplate);
            }
            if ((this.onEndSaveTemplateDelegate == null)) {
                this.onEndSaveTemplateDelegate = new EndOperationDelegate(this.OnEndSaveTemplate);
            }
            if ((this.onSaveTemplateCompletedDelegate == null)) {
                this.onSaveTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTemplateDelegate, new object[] {
                        template}, this.onEndSaveTemplateDelegate, this.onSaveTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginUpdateTemplate(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTemplate(template, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndUpdateTemplate(System.IAsyncResult result) {
            return base.Channel.EndUpdateTemplate(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginUpdateTemplate(template, callback, asyncState);
        }
        
        private object[] OnEndUpdateTemplate(System.IAsyncResult result) {
            int retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndUpdateTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateTemplateCompleted(object state) {
            if ((this.UpdateTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTemplateCompleted(this, new UpdateTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTemplateAsync(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template) {
            this.UpdateTemplateAsync(template, null);
        }
        
        public void UpdateTemplateAsync(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template, object userState) {
            if ((this.onBeginUpdateTemplateDelegate == null)) {
                this.onBeginUpdateTemplateDelegate = new BeginOperationDelegate(this.OnBeginUpdateTemplate);
            }
            if ((this.onEndUpdateTemplateDelegate == null)) {
                this.onEndUpdateTemplateDelegate = new EndOperationDelegate(this.OnEndUpdateTemplate);
            }
            if ((this.onUpdateTemplateCompletedDelegate == null)) {
                this.onUpdateTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTemplateDelegate, new object[] {
                        template}, this.onEndUpdateTemplateDelegate, this.onUpdateTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginDeleteTemplate(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTemplate(template, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndDeleteTemplate(System.IAsyncResult result) {
            return base.Channel.EndDeleteTemplate(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginDeleteTemplate(template, callback, asyncState);
        }
        
        private object[] OnEndDeleteTemplate(System.IAsyncResult result) {
            int retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndDeleteTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteTemplateCompleted(object state) {
            if ((this.DeleteTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTemplateCompleted(this, new DeleteTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTemplateAsync(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template) {
            this.DeleteTemplateAsync(template, null);
        }
        
        public void DeleteTemplateAsync(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template, object userState) {
            if ((this.onBeginDeleteTemplateDelegate == null)) {
                this.onBeginDeleteTemplateDelegate = new BeginOperationDelegate(this.OnBeginDeleteTemplate);
            }
            if ((this.onEndDeleteTemplateDelegate == null)) {
                this.onEndDeleteTemplateDelegate = new EndOperationDelegate(this.OnEndDeleteTemplate);
            }
            if ((this.onDeleteTemplateCompletedDelegate == null)) {
                this.onDeleteTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTemplateDelegate, new object[] {
                        template}, this.onEndDeleteTemplateDelegate, this.onDeleteTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginGetTemplatesDetailsByTemplateTitle(long TemplateId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTemplatesDetailsByTemplateTitle(TemplateId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndGetTemplatesDetailsByTemplateTitle(System.IAsyncResult result) {
            return base.Channel.EndGetTemplatesDetailsByTemplateTitle(result);
        }
        
        private System.IAsyncResult OnBeginGetTemplatesDetailsByTemplateTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long TemplateId = ((long)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginGetTemplatesDetailsByTemplateTitle(TemplateId, callback, asyncState);
        }
        
        private object[] OnEndGetTemplatesDetailsByTemplateTitle(System.IAsyncResult result) {
            PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndGetTemplatesDetailsByTemplateTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTemplatesDetailsByTemplateTitleCompleted(object state) {
            if ((this.GetTemplatesDetailsByTemplateTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTemplatesDetailsByTemplateTitleCompleted(this, new GetTemplatesDetailsByTemplateTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTemplatesDetailsByTemplateTitleAsync(long TemplateId) {
            this.GetTemplatesDetailsByTemplateTitleAsync(TemplateId, null);
        }
        
        public void GetTemplatesDetailsByTemplateTitleAsync(long TemplateId, object userState) {
            if ((this.onBeginGetTemplatesDetailsByTemplateTitleDelegate == null)) {
                this.onBeginGetTemplatesDetailsByTemplateTitleDelegate = new BeginOperationDelegate(this.OnBeginGetTemplatesDetailsByTemplateTitle);
            }
            if ((this.onEndGetTemplatesDetailsByTemplateTitleDelegate == null)) {
                this.onEndGetTemplatesDetailsByTemplateTitleDelegate = new EndOperationDelegate(this.OnEndGetTemplatesDetailsByTemplateTitle);
            }
            if ((this.onGetTemplatesDetailsByTemplateTitleCompletedDelegate == null)) {
                this.onGetTemplatesDetailsByTemplateTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTemplatesDetailsByTemplateTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGetTemplatesDetailsByTemplateTitleDelegate, new object[] {
                        TemplateId}, this.onEndGetTemplatesDetailsByTemplateTitleDelegate, this.onGetTemplatesDetailsByTemplateTitleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginGetTemplatesList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTemplatesList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate> PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndGetTemplatesList(System.IAsyncResult result) {
            return base.Channel.EndGetTemplatesList(result);
        }
        
        private System.IAsyncResult OnBeginGetTemplatesList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginGetTemplatesList(callback, asyncState);
        }
        
        private object[] OnEndGetTemplatesList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate> retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndGetTemplatesList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTemplatesListCompleted(object state) {
            if ((this.GetTemplatesListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTemplatesListCompleted(this, new GetTemplatesListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTemplatesListAsync() {
            this.GetTemplatesListAsync(null);
        }
        
        public void GetTemplatesListAsync(object userState) {
            if ((this.onBeginGetTemplatesListDelegate == null)) {
                this.onBeginGetTemplatesListDelegate = new BeginOperationDelegate(this.OnBeginGetTemplatesList);
            }
            if ((this.onEndGetTemplatesListDelegate == null)) {
                this.onEndGetTemplatesListDelegate = new EndOperationDelegate(this.OnEndGetTemplatesList);
            }
            if ((this.onGetTemplatesListCompletedDelegate == null)) {
                this.onGetTemplatesListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTemplatesListCompleted);
            }
            base.InvokeAsync(this.onBeginGetTemplatesListDelegate, null, this.onEndGetTemplatesListDelegate, this.onGetTemplatesListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginGetRelationList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRelationList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.IntraTemplateRelation> PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndGetRelationList(System.IAsyncResult result) {
            return base.Channel.EndGetRelationList(result);
        }
        
        private System.IAsyncResult OnBeginGetRelationList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginGetRelationList(callback, asyncState);
        }
        
        private object[] OnEndGetRelationList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.IntraTemplateRelation> retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndGetRelationList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRelationListCompleted(object state) {
            if ((this.GetRelationListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRelationListCompleted(this, new GetRelationListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRelationListAsync() {
            this.GetRelationListAsync(null);
        }
        
        public void GetRelationListAsync(object userState) {
            if ((this.onBeginGetRelationListDelegate == null)) {
                this.onBeginGetRelationListDelegate = new BeginOperationDelegate(this.OnBeginGetRelationList);
            }
            if ((this.onEndGetRelationListDelegate == null)) {
                this.onEndGetRelationListDelegate = new EndOperationDelegate(this.OnEndGetRelationList);
            }
            if ((this.onGetRelationListCompletedDelegate == null)) {
                this.onGetRelationListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRelationListCompleted);
            }
            base.InvokeAsync(this.onBeginGetRelationListDelegate, null, this.onEndGetRelationListDelegate, this.onGetRelationListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginSavePatientEMR(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMR, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePatientEMR(PatientEMR, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndSavePatientEMR(System.IAsyncResult result) {
            return base.Channel.EndSavePatientEMR(result);
        }
        
        private System.IAsyncResult OnBeginSavePatientEMR(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMR = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginSavePatientEMR(PatientEMR, callback, asyncState);
        }
        
        private object[] OnEndSavePatientEMR(System.IAsyncResult result) {
            int retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndSavePatientEMR(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSavePatientEMRCompleted(object state) {
            if ((this.SavePatientEMRCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePatientEMRCompleted(this, new SavePatientEMRCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePatientEMRAsync(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMR) {
            this.SavePatientEMRAsync(PatientEMR, null);
        }
        
        public void SavePatientEMRAsync(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMR, object userState) {
            if ((this.onBeginSavePatientEMRDelegate == null)) {
                this.onBeginSavePatientEMRDelegate = new BeginOperationDelegate(this.OnBeginSavePatientEMR);
            }
            if ((this.onEndSavePatientEMRDelegate == null)) {
                this.onEndSavePatientEMRDelegate = new EndOperationDelegate(this.OnEndSavePatientEMR);
            }
            if ((this.onSavePatientEMRCompletedDelegate == null)) {
                this.onSavePatientEMRCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePatientEMRCompleted);
            }
            base.InvokeAsync(this.onBeginSavePatientEMRDelegate, new object[] {
                        PatientEMR}, this.onEndSavePatientEMRDelegate, this.onSavePatientEMRCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginSavePatientEMR1(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMRData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSavePatientEMR1(PatientEMRData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndSavePatientEMR1(System.IAsyncResult result) {
            return base.Channel.EndSavePatientEMR1(result);
        }
        
        private System.IAsyncResult OnBeginSavePatientEMR1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMRData = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginSavePatientEMR1(PatientEMRData, callback, asyncState);
        }
        
        private object[] OnEndSavePatientEMR1(System.IAsyncResult result) {
            int retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndSavePatientEMR1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSavePatientEMR1Completed(object state) {
            if ((this.SavePatientEMR1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SavePatientEMR1Completed(this, new SavePatientEMR1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SavePatientEMR1Async(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMRData) {
            this.SavePatientEMR1Async(PatientEMRData, null);
        }
        
        public void SavePatientEMR1Async(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMRData, object userState) {
            if ((this.onBeginSavePatientEMR1Delegate == null)) {
                this.onBeginSavePatientEMR1Delegate = new BeginOperationDelegate(this.OnBeginSavePatientEMR1);
            }
            if ((this.onEndSavePatientEMR1Delegate == null)) {
                this.onEndSavePatientEMR1Delegate = new EndOperationDelegate(this.OnEndSavePatientEMR1);
            }
            if ((this.onSavePatientEMR1CompletedDelegate == null)) {
                this.onSavePatientEMR1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSavePatientEMR1Completed);
            }
            base.InvokeAsync(this.onBeginSavePatientEMR1Delegate, new object[] {
                        PatientEMRData}, this.onEndSavePatientEMR1Delegate, this.onSavePatientEMR1CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginUpdatePatientEMR(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMR, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePatientEMR(PatientEMR, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndUpdatePatientEMR(System.IAsyncResult result) {
            return base.Channel.EndUpdatePatientEMR(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePatientEMR(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMR = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginUpdatePatientEMR(PatientEMR, callback, asyncState);
        }
        
        private object[] OnEndUpdatePatientEMR(System.IAsyncResult result) {
            int retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndUpdatePatientEMR(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdatePatientEMRCompleted(object state) {
            if ((this.UpdatePatientEMRCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePatientEMRCompleted(this, new UpdatePatientEMRCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePatientEMRAsync(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMR) {
            this.UpdatePatientEMRAsync(PatientEMR, null);
        }
        
        public void UpdatePatientEMRAsync(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMR, object userState) {
            if ((this.onBeginUpdatePatientEMRDelegate == null)) {
                this.onBeginUpdatePatientEMRDelegate = new BeginOperationDelegate(this.OnBeginUpdatePatientEMR);
            }
            if ((this.onEndUpdatePatientEMRDelegate == null)) {
                this.onEndUpdatePatientEMRDelegate = new EndOperationDelegate(this.OnEndUpdatePatientEMR);
            }
            if ((this.onUpdatePatientEMRCompletedDelegate == null)) {
                this.onUpdatePatientEMRCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePatientEMRCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePatientEMRDelegate, new object[] {
                        PatientEMR}, this.onEndUpdatePatientEMRDelegate, this.onUpdatePatientEMRCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginGetPatientEMRByPatientIdAndTemplateId(long PatientId, long TemplateId, long VisitId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPatientEMRByPatientIdAndTemplateId(PatientId, TemplateId, VisitId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndGetPatientEMRByPatientIdAndTemplateId(System.IAsyncResult result) {
            return base.Channel.EndGetPatientEMRByPatientIdAndTemplateId(result);
        }
        
        private System.IAsyncResult OnBeginGetPatientEMRByPatientIdAndTemplateId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long PatientId = ((long)(inValues[0]));
            long TemplateId = ((long)(inValues[1]));
            long VisitId = ((long)(inValues[2]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginGetPatientEMRByPatientIdAndTemplateId(PatientId, TemplateId, VisitId, callback, asyncState);
        }
        
        private object[] OnEndGetPatientEMRByPatientIdAndTemplateId(System.IAsyncResult result) {
            PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndGetPatientEMRByPatientIdAndTemplateId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPatientEMRByPatientIdAndTemplateIdCompleted(object state) {
            if ((this.GetPatientEMRByPatientIdAndTemplateIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPatientEMRByPatientIdAndTemplateIdCompleted(this, new GetPatientEMRByPatientIdAndTemplateIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPatientEMRByPatientIdAndTemplateIdAsync(long PatientId, long TemplateId, long VisitId) {
            this.GetPatientEMRByPatientIdAndTemplateIdAsync(PatientId, TemplateId, VisitId, null);
        }
        
        public void GetPatientEMRByPatientIdAndTemplateIdAsync(long PatientId, long TemplateId, long VisitId, object userState) {
            if ((this.onBeginGetPatientEMRByPatientIdAndTemplateIdDelegate == null)) {
                this.onBeginGetPatientEMRByPatientIdAndTemplateIdDelegate = new BeginOperationDelegate(this.OnBeginGetPatientEMRByPatientIdAndTemplateId);
            }
            if ((this.onEndGetPatientEMRByPatientIdAndTemplateIdDelegate == null)) {
                this.onEndGetPatientEMRByPatientIdAndTemplateIdDelegate = new EndOperationDelegate(this.OnEndGetPatientEMRByPatientIdAndTemplateId);
            }
            if ((this.onGetPatientEMRByPatientIdAndTemplateIdCompletedDelegate == null)) {
                this.onGetPatientEMRByPatientIdAndTemplateIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPatientEMRByPatientIdAndTemplateIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetPatientEMRByPatientIdAndTemplateIdDelegate, new object[] {
                        PatientId,
                        TemplateId,
                        VisitId}, this.onEndGetPatientEMRByPatientIdAndTemplateIdDelegate, this.onGetPatientEMRByPatientIdAndTemplateIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginGetFileList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFileList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndGetFileList(System.IAsyncResult result) {
            return base.Channel.EndGetFileList(result);
        }
        
        private System.IAsyncResult OnBeginGetFileList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginGetFileList(callback, asyncState);
        }
        
        private object[] OnEndGetFileList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndGetFileList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFileListCompleted(object state) {
            if ((this.GetFileListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFileListCompleted(this, new GetFileListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFileListAsync() {
            this.GetFileListAsync(null);
        }
        
        public void GetFileListAsync(object userState) {
            if ((this.onBeginGetFileListDelegate == null)) {
                this.onBeginGetFileListDelegate = new BeginOperationDelegate(this.OnBeginGetFileList);
            }
            if ((this.onEndGetFileListDelegate == null)) {
                this.onEndGetFileListDelegate = new EndOperationDelegate(this.OnEndGetFileList);
            }
            if ((this.onGetFileListCompletedDelegate == null)) {
                this.onGetFileListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFileListCompleted);
            }
            base.InvokeAsync(this.onBeginGetFileListDelegate, null, this.onEndGetFileListDelegate, this.onGetFileListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginGetFilePath(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFilePath(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndGetFilePath(System.IAsyncResult result) {
            return base.Channel.EndGetFilePath(result);
        }
        
        private System.IAsyncResult OnBeginGetFilePath(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginGetFilePath(callback, asyncState);
        }
        
        private object[] OnEndGetFilePath(System.IAsyncResult result) {
            string retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndGetFilePath(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFilePathCompleted(object state) {
            if ((this.GetFilePathCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFilePathCompleted(this, new GetFilePathCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFilePathAsync() {
            this.GetFilePathAsync(null);
        }
        
        public void GetFilePathAsync(object userState) {
            if ((this.onBeginGetFilePathDelegate == null)) {
                this.onBeginGetFilePathDelegate = new BeginOperationDelegate(this.OnBeginGetFilePath);
            }
            if ((this.onEndGetFilePathDelegate == null)) {
                this.onEndGetFilePathDelegate = new EndOperationDelegate(this.OnEndGetFilePath);
            }
            if ((this.onGetFilePathCompletedDelegate == null)) {
                this.onGetFilePathCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFilePathCompleted);
            }
            base.InvokeAsync(this.onBeginGetFilePathDelegate, null, this.onEndGetFilePathDelegate, this.onGetFilePathCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginUploadFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadFile(fileName, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndUploadFile(System.IAsyncResult result) {
            base.Channel.EndUploadFile(result);
        }
        
        private System.IAsyncResult OnBeginUploadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginUploadFile(fileName, data, callback, asyncState);
        }
        
        private object[] OnEndUploadFile(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndUploadFile(result);
            return null;
        }
        
        private void OnUploadFileCompleted(object state) {
            if ((this.UploadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadFileAsync(string fileName, byte[] data) {
            this.UploadFileAsync(fileName, data, null);
        }
        
        public void UploadFileAsync(string fileName, byte[] data, object userState) {
            if ((this.onBeginUploadFileDelegate == null)) {
                this.onBeginUploadFileDelegate = new BeginOperationDelegate(this.OnBeginUploadFile);
            }
            if ((this.onEndUploadFileDelegate == null)) {
                this.onEndUploadFileDelegate = new EndOperationDelegate(this.OnEndUploadFile);
            }
            if ((this.onUploadFileCompletedDelegate == null)) {
                this.onUploadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadFileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadFileDelegate, new object[] {
                        fileName,
                        data}, this.onEndUploadFileDelegate, this.onUploadFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginDeletePathReportFile(string fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeletePathReportFile(fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndDeletePathReportFile(System.IAsyncResult result) {
            base.Channel.EndDeletePathReportFile(result);
        }
        
        private System.IAsyncResult OnBeginDeletePathReportFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginDeletePathReportFile(fileName, callback, asyncState);
        }
        
        private object[] OnEndDeletePathReportFile(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndDeletePathReportFile(result);
            return null;
        }
        
        private void OnDeletePathReportFileCompleted(object state) {
            if ((this.DeletePathReportFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeletePathReportFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeletePathReportFileAsync(string fileName) {
            this.DeletePathReportFileAsync(fileName, null);
        }
        
        public void DeletePathReportFileAsync(string fileName, object userState) {
            if ((this.onBeginDeletePathReportFileDelegate == null)) {
                this.onBeginDeletePathReportFileDelegate = new BeginOperationDelegate(this.OnBeginDeletePathReportFile);
            }
            if ((this.onEndDeletePathReportFileDelegate == null)) {
                this.onEndDeletePathReportFileDelegate = new EndOperationDelegate(this.OnEndDeletePathReportFile);
            }
            if ((this.onDeletePathReportFileCompletedDelegate == null)) {
                this.onDeletePathReportFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeletePathReportFileCompleted);
            }
            base.InvokeAsync(this.onBeginDeletePathReportFileDelegate, new object[] {
                        fileName}, this.onEndDeletePathReportFileDelegate, this.onDeletePathReportFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginUploadReportFileForPathology(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadReportFileForPathology(fileName, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndUploadReportFileForPathology(System.IAsyncResult result) {
            base.Channel.EndUploadReportFileForPathology(result);
        }
        
        private System.IAsyncResult OnBeginUploadReportFileForPathology(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginUploadReportFileForPathology(fileName, data, callback, asyncState);
        }
        
        private object[] OnEndUploadReportFileForPathology(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndUploadReportFileForPathology(result);
            return null;
        }
        
        private void OnUploadReportFileForPathologyCompleted(object state) {
            if ((this.UploadReportFileForPathologyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadReportFileForPathologyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadReportFileForPathologyAsync(string fileName, byte[] data) {
            this.UploadReportFileForPathologyAsync(fileName, data, null);
        }
        
        public void UploadReportFileForPathologyAsync(string fileName, byte[] data, object userState) {
            if ((this.onBeginUploadReportFileForPathologyDelegate == null)) {
                this.onBeginUploadReportFileForPathologyDelegate = new BeginOperationDelegate(this.OnBeginUploadReportFileForPathology);
            }
            if ((this.onEndUploadReportFileForPathologyDelegate == null)) {
                this.onEndUploadReportFileForPathologyDelegate = new EndOperationDelegate(this.OnEndUploadReportFileForPathology);
            }
            if ((this.onUploadReportFileForPathologyCompletedDelegate == null)) {
                this.onUploadReportFileForPathologyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadReportFileForPathologyCompleted);
            }
            base.InvokeAsync(this.onBeginUploadReportFileForPathologyDelegate, new object[] {
                        fileName,
                        data}, this.onEndUploadReportFileForPathologyDelegate, this.onUploadReportFileForPathologyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginAttachmentFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAttachmentFile(fileName, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndAttachmentFile(System.IAsyncResult result) {
            base.Channel.EndAttachmentFile(result);
        }
        
        private System.IAsyncResult OnBeginAttachmentFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginAttachmentFile(fileName, data, callback, asyncState);
        }
        
        private object[] OnEndAttachmentFile(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndAttachmentFile(result);
            return null;
        }
        
        private void OnAttachmentFileCompleted(object state) {
            if ((this.AttachmentFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AttachmentFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AttachmentFileAsync(string fileName, byte[] data) {
            this.AttachmentFileAsync(fileName, data, null);
        }
        
        public void AttachmentFileAsync(string fileName, byte[] data, object userState) {
            if ((this.onBeginAttachmentFileDelegate == null)) {
                this.onBeginAttachmentFileDelegate = new BeginOperationDelegate(this.OnBeginAttachmentFile);
            }
            if ((this.onEndAttachmentFileDelegate == null)) {
                this.onEndAttachmentFileDelegate = new EndOperationDelegate(this.OnEndAttachmentFile);
            }
            if ((this.onAttachmentFileCompletedDelegate == null)) {
                this.onAttachmentFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAttachmentFileCompleted);
            }
            base.InvokeAsync(this.onBeginAttachmentFileDelegate, new object[] {
                        fileName,
                        data}, this.onEndAttachmentFileDelegate, this.onAttachmentFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginDeleteAttachmentFile(string fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAttachmentFile(fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndDeleteAttachmentFile(System.IAsyncResult result) {
            base.Channel.EndDeleteAttachmentFile(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAttachmentFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginDeleteAttachmentFile(fileName, callback, asyncState);
        }
        
        private object[] OnEndDeleteAttachmentFile(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndDeleteAttachmentFile(result);
            return null;
        }
        
        private void OnDeleteAttachmentFileCompleted(object state) {
            if ((this.DeleteAttachmentFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAttachmentFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAttachmentFileAsync(string fileName) {
            this.DeleteAttachmentFileAsync(fileName, null);
        }
        
        public void DeleteAttachmentFileAsync(string fileName, object userState) {
            if ((this.onBeginDeleteAttachmentFileDelegate == null)) {
                this.onBeginDeleteAttachmentFileDelegate = new BeginOperationDelegate(this.OnBeginDeleteAttachmentFile);
            }
            if ((this.onEndDeleteAttachmentFileDelegate == null)) {
                this.onEndDeleteAttachmentFileDelegate = new EndOperationDelegate(this.OnEndDeleteAttachmentFile);
            }
            if ((this.onDeleteAttachmentFileCompletedDelegate == null)) {
                this.onDeleteAttachmentFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAttachmentFileCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAttachmentFileDelegate, new object[] {
                        fileName}, this.onEndDeleteAttachmentFileDelegate, this.onDeleteAttachmentFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginActivationFile(string FileData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActivationFile(FileData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndActivationFile(System.IAsyncResult result) {
            return base.Channel.EndActivationFile(result);
        }
        
        private System.IAsyncResult OnBeginActivationFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FileData = ((string)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginActivationFile(FileData, callback, asyncState);
        }
        
        private object[] OnEndActivationFile(System.IAsyncResult result) {
            string retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndActivationFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnActivationFileCompleted(object state) {
            if ((this.ActivationFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActivationFileCompleted(this, new ActivationFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActivationFileAsync(string FileData) {
            this.ActivationFileAsync(FileData, null);
        }
        
        public void ActivationFileAsync(string FileData, object userState) {
            if ((this.onBeginActivationFileDelegate == null)) {
                this.onBeginActivationFileDelegate = new BeginOperationDelegate(this.OnBeginActivationFile);
            }
            if ((this.onEndActivationFileDelegate == null)) {
                this.onEndActivationFileDelegate = new EndOperationDelegate(this.OnEndActivationFile);
            }
            if ((this.onActivationFileCompletedDelegate == null)) {
                this.onActivationFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActivationFileCompleted);
            }
            base.InvokeAsync(this.onBeginActivationFileDelegate, new object[] {
                        FileData}, this.onEndActivationFileDelegate, this.onActivationFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginGetApplicationPath(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetApplicationPath(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndGetApplicationPath(System.IAsyncResult result) {
            return base.Channel.EndGetApplicationPath(result);
        }
        
        private System.IAsyncResult OnBeginGetApplicationPath(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginGetApplicationPath(callback, asyncState);
        }
        
        private object[] OnEndGetApplicationPath(System.IAsyncResult result) {
            string retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndGetApplicationPath(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetApplicationPathCompleted(object state) {
            if ((this.GetApplicationPathCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetApplicationPathCompleted(this, new GetApplicationPathCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetApplicationPathAsync() {
            this.GetApplicationPathAsync(null);
        }
        
        public void GetApplicationPathAsync(object userState) {
            if ((this.onBeginGetApplicationPathDelegate == null)) {
                this.onBeginGetApplicationPathDelegate = new BeginOperationDelegate(this.OnBeginGetApplicationPath);
            }
            if ((this.onEndGetApplicationPathDelegate == null)) {
                this.onEndGetApplicationPathDelegate = new EndOperationDelegate(this.OnEndGetApplicationPath);
            }
            if ((this.onGetApplicationPathCompletedDelegate == null)) {
                this.onGetApplicationPathCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetApplicationPathCompleted);
            }
            base.InvokeAsync(this.onBeginGetApplicationPathDelegate, null, this.onEndGetApplicationPathDelegate, this.onGetApplicationPathCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginGetActivationFile(string FileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetActivationFile(FileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndGetActivationFile(System.IAsyncResult result) {
            return base.Channel.EndGetActivationFile(result);
        }
        
        private System.IAsyncResult OnBeginGetActivationFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FileName = ((string)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginGetActivationFile(FileName, callback, asyncState);
        }
        
        private object[] OnEndGetActivationFile(System.IAsyncResult result) {
            string retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndGetActivationFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetActivationFileCompleted(object state) {
            if ((this.GetActivationFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetActivationFileCompleted(this, new GetActivationFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetActivationFileAsync(string FileName) {
            this.GetActivationFileAsync(FileName, null);
        }
        
        public void GetActivationFileAsync(string FileName, object userState) {
            if ((this.onBeginGetActivationFileDelegate == null)) {
                this.onBeginGetActivationFileDelegate = new BeginOperationDelegate(this.OnBeginGetActivationFile);
            }
            if ((this.onEndGetActivationFileDelegate == null)) {
                this.onEndGetActivationFileDelegate = new EndOperationDelegate(this.OnEndGetActivationFile);
            }
            if ((this.onGetActivationFileCompletedDelegate == null)) {
                this.onGetActivationFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetActivationFileCompleted);
            }
            base.InvokeAsync(this.onBeginGetActivationFileDelegate, new object[] {
                        FileName}, this.onEndGetActivationFileDelegate, this.onGetActivationFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginUploadReportFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadReportFile(fileName, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndUploadReportFile(System.IAsyncResult result) {
            base.Channel.EndUploadReportFile(result);
        }
        
        private System.IAsyncResult OnBeginUploadReportFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginUploadReportFile(fileName, data, callback, asyncState);
        }
        
        private object[] OnEndUploadReportFile(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndUploadReportFile(result);
            return null;
        }
        
        private void OnUploadReportFileCompleted(object state) {
            if ((this.UploadReportFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadReportFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadReportFileAsync(string fileName, byte[] data) {
            this.UploadReportFileAsync(fileName, data, null);
        }
        
        public void UploadReportFileAsync(string fileName, byte[] data, object userState) {
            if ((this.onBeginUploadReportFileDelegate == null)) {
                this.onBeginUploadReportFileDelegate = new BeginOperationDelegate(this.OnBeginUploadReportFile);
            }
            if ((this.onEndUploadReportFileDelegate == null)) {
                this.onEndUploadReportFileDelegate = new EndOperationDelegate(this.OnEndUploadReportFile);
            }
            if ((this.onUploadReportFileCompletedDelegate == null)) {
                this.onUploadReportFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadReportFileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadReportFileDelegate, new object[] {
                        fileName,
                        data}, this.onEndUploadReportFileDelegate, this.onUploadReportFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginUploadReportFileForRadiology(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadReportFileForRadiology(fileName, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndUploadReportFileForRadiology(System.IAsyncResult result) {
            base.Channel.EndUploadReportFileForRadiology(result);
        }
        
        private System.IAsyncResult OnBeginUploadReportFileForRadiology(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginUploadReportFileForRadiology(fileName, data, callback, asyncState);
        }
        
        private object[] OnEndUploadReportFileForRadiology(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndUploadReportFileForRadiology(result);
            return null;
        }
        
        private void OnUploadReportFileForRadiologyCompleted(object state) {
            if ((this.UploadReportFileForRadiologyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadReportFileForRadiologyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadReportFileForRadiologyAsync(string fileName, byte[] data) {
            this.UploadReportFileForRadiologyAsync(fileName, data, null);
        }
        
        public void UploadReportFileForRadiologyAsync(string fileName, byte[] data, object userState) {
            if ((this.onBeginUploadReportFileForRadiologyDelegate == null)) {
                this.onBeginUploadReportFileForRadiologyDelegate = new BeginOperationDelegate(this.OnBeginUploadReportFileForRadiology);
            }
            if ((this.onEndUploadReportFileForRadiologyDelegate == null)) {
                this.onEndUploadReportFileForRadiologyDelegate = new EndOperationDelegate(this.OnEndUploadReportFileForRadiology);
            }
            if ((this.onUploadReportFileForRadiologyCompletedDelegate == null)) {
                this.onUploadReportFileForRadiologyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadReportFileForRadiologyCompleted);
            }
            base.InvokeAsync(this.onBeginUploadReportFileForRadiologyDelegate, new object[] {
                        fileName,
                        data}, this.onEndUploadReportFileForRadiologyDelegate, this.onUploadReportFileForRadiologyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginUploadReportFileForDischarge(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadReportFileForDischarge(fileName, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndUploadReportFileForDischarge(System.IAsyncResult result) {
            base.Channel.EndUploadReportFileForDischarge(result);
        }
        
        private System.IAsyncResult OnBeginUploadReportFileForDischarge(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginUploadReportFileForDischarge(fileName, data, callback, asyncState);
        }
        
        private object[] OnEndUploadReportFileForDischarge(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndUploadReportFileForDischarge(result);
            return null;
        }
        
        private void OnUploadReportFileForDischargeCompleted(object state) {
            if ((this.UploadReportFileForDischargeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadReportFileForDischargeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadReportFileForDischargeAsync(string fileName, byte[] data) {
            this.UploadReportFileForDischargeAsync(fileName, data, null);
        }
        
        public void UploadReportFileForDischargeAsync(string fileName, byte[] data, object userState) {
            if ((this.onBeginUploadReportFileForDischargeDelegate == null)) {
                this.onBeginUploadReportFileForDischargeDelegate = new BeginOperationDelegate(this.OnBeginUploadReportFileForDischarge);
            }
            if ((this.onEndUploadReportFileForDischargeDelegate == null)) {
                this.onEndUploadReportFileForDischargeDelegate = new EndOperationDelegate(this.OnEndUploadReportFileForDischarge);
            }
            if ((this.onUploadReportFileForDischargeCompletedDelegate == null)) {
                this.onUploadReportFileForDischargeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadReportFileForDischargeCompleted);
            }
            base.InvokeAsync(this.onBeginUploadReportFileForDischargeDelegate, new object[] {
                        fileName,
                        data}, this.onEndUploadReportFileForDischargeDelegate, this.onUploadReportFileForDischargeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginUploadReportFileForConsent(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadReportFileForConsent(fileName, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndUploadReportFileForConsent(System.IAsyncResult result) {
            base.Channel.EndUploadReportFileForConsent(result);
        }
        
        private System.IAsyncResult OnBeginUploadReportFileForConsent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginUploadReportFileForConsent(fileName, data, callback, asyncState);
        }
        
        private object[] OnEndUploadReportFileForConsent(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndUploadReportFileForConsent(result);
            return null;
        }
        
        private void OnUploadReportFileForConsentCompleted(object state) {
            if ((this.UploadReportFileForConsentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadReportFileForConsentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadReportFileForConsentAsync(string fileName, byte[] data) {
            this.UploadReportFileForConsentAsync(fileName, data, null);
        }
        
        public void UploadReportFileForConsentAsync(string fileName, byte[] data, object userState) {
            if ((this.onBeginUploadReportFileForConsentDelegate == null)) {
                this.onBeginUploadReportFileForConsentDelegate = new BeginOperationDelegate(this.OnBeginUploadReportFileForConsent);
            }
            if ((this.onEndUploadReportFileForConsentDelegate == null)) {
                this.onEndUploadReportFileForConsentDelegate = new EndOperationDelegate(this.OnEndUploadReportFileForConsent);
            }
            if ((this.onUploadReportFileForConsentCompletedDelegate == null)) {
                this.onUploadReportFileForConsentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadReportFileForConsentCompleted);
            }
            base.InvokeAsync(this.onBeginUploadReportFileForConsentDelegate, new object[] {
                        fileName,
                        data}, this.onEndUploadReportFileForConsentDelegate, this.onUploadReportFileForConsentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginUploadReportFileForMLCase(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadReportFileForMLCase(fileName, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndUploadReportFileForMLCase(System.IAsyncResult result) {
            base.Channel.EndUploadReportFileForMLCase(result);
        }
        
        private System.IAsyncResult OnBeginUploadReportFileForMLCase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginUploadReportFileForMLCase(fileName, data, callback, asyncState);
        }
        
        private object[] OnEndUploadReportFileForMLCase(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndUploadReportFileForMLCase(result);
            return null;
        }
        
        private void OnUploadReportFileForMLCaseCompleted(object state) {
            if ((this.UploadReportFileForMLCaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadReportFileForMLCaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadReportFileForMLCaseAsync(string fileName, byte[] data) {
            this.UploadReportFileForMLCaseAsync(fileName, data, null);
        }
        
        public void UploadReportFileForMLCaseAsync(string fileName, byte[] data, object userState) {
            if ((this.onBeginUploadReportFileForMLCaseDelegate == null)) {
                this.onBeginUploadReportFileForMLCaseDelegate = new BeginOperationDelegate(this.OnBeginUploadReportFileForMLCase);
            }
            if ((this.onEndUploadReportFileForMLCaseDelegate == null)) {
                this.onEndUploadReportFileForMLCaseDelegate = new EndOperationDelegate(this.OnEndUploadReportFileForMLCase);
            }
            if ((this.onUploadReportFileForMLCaseCompletedDelegate == null)) {
                this.onUploadReportFileForMLCaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadReportFileForMLCaseCompleted);
            }
            base.InvokeAsync(this.onBeginUploadReportFileForMLCaseDelegate, new object[] {
                        fileName,
                        data}, this.onEndUploadReportFileForMLCaseDelegate, this.onUploadReportFileForMLCaseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginGlobalUploadFile(string RelativePath, string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGlobalUploadFile(RelativePath, fileName, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndGlobalUploadFile(System.IAsyncResult result) {
            base.Channel.EndGlobalUploadFile(result);
        }
        
        private System.IAsyncResult OnBeginGlobalUploadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string RelativePath = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            byte[] data = ((byte[])(inValues[2]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginGlobalUploadFile(RelativePath, fileName, data, callback, asyncState);
        }
        
        private object[] OnEndGlobalUploadFile(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndGlobalUploadFile(result);
            return null;
        }
        
        private void OnGlobalUploadFileCompleted(object state) {
            if ((this.GlobalUploadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GlobalUploadFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GlobalUploadFileAsync(string RelativePath, string fileName, byte[] data) {
            this.GlobalUploadFileAsync(RelativePath, fileName, data, null);
        }
        
        public void GlobalUploadFileAsync(string RelativePath, string fileName, byte[] data, object userState) {
            if ((this.onBeginGlobalUploadFileDelegate == null)) {
                this.onBeginGlobalUploadFileDelegate = new BeginOperationDelegate(this.OnBeginGlobalUploadFile);
            }
            if ((this.onEndGlobalUploadFileDelegate == null)) {
                this.onEndGlobalUploadFileDelegate = new EndOperationDelegate(this.OnEndGlobalUploadFile);
            }
            if ((this.onGlobalUploadFileCompletedDelegate == null)) {
                this.onGlobalUploadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGlobalUploadFileCompleted);
            }
            base.InvokeAsync(this.onBeginGlobalUploadFileDelegate, new object[] {
                        RelativePath,
                        fileName,
                        data}, this.onEndGlobalUploadFileDelegate, this.onGlobalUploadFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginGlobalDeleteFile(string RelativePath, System.Collections.ObjectModel.ObservableCollection<string> fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGlobalDeleteFile(RelativePath, fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndGlobalDeleteFile(System.IAsyncResult result) {
            base.Channel.EndGlobalDeleteFile(result);
        }
        
        private System.IAsyncResult OnBeginGlobalDeleteFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string RelativePath = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<string> fileName = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[1]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginGlobalDeleteFile(RelativePath, fileName, callback, asyncState);
        }
        
        private object[] OnEndGlobalDeleteFile(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndGlobalDeleteFile(result);
            return null;
        }
        
        private void OnGlobalDeleteFileCompleted(object state) {
            if ((this.GlobalDeleteFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GlobalDeleteFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GlobalDeleteFileAsync(string RelativePath, System.Collections.ObjectModel.ObservableCollection<string> fileName) {
            this.GlobalDeleteFileAsync(RelativePath, fileName, null);
        }
        
        public void GlobalDeleteFileAsync(string RelativePath, System.Collections.ObjectModel.ObservableCollection<string> fileName, object userState) {
            if ((this.onBeginGlobalDeleteFileDelegate == null)) {
                this.onBeginGlobalDeleteFileDelegate = new BeginOperationDelegate(this.OnBeginGlobalDeleteFile);
            }
            if ((this.onEndGlobalDeleteFileDelegate == null)) {
                this.onEndGlobalDeleteFileDelegate = new EndOperationDelegate(this.OnEndGlobalDeleteFile);
            }
            if ((this.onGlobalDeleteFileCompletedDelegate == null)) {
                this.onGlobalDeleteFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGlobalDeleteFileCompleted);
            }
            base.InvokeAsync(this.onBeginGlobalDeleteFileDelegate, new object[] {
                        RelativePath,
                        fileName}, this.onEndGlobalDeleteFileDelegate, this.onGlobalDeleteFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginUploadETemplateFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadETemplateFile(fileName, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndUploadETemplateFile(System.IAsyncResult result) {
            base.Channel.EndUploadETemplateFile(result);
        }
        
        private System.IAsyncResult OnBeginUploadETemplateFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginUploadETemplateFile(fileName, data, callback, asyncState);
        }
        
        private object[] OnEndUploadETemplateFile(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndUploadETemplateFile(result);
            return null;
        }
        
        private void OnUploadETemplateFileCompleted(object state) {
            if ((this.UploadETemplateFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadETemplateFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadETemplateFileAsync(string fileName, byte[] data) {
            this.UploadETemplateFileAsync(fileName, data, null);
        }
        
        public void UploadETemplateFileAsync(string fileName, byte[] data, object userState) {
            if ((this.onBeginUploadETemplateFileDelegate == null)) {
                this.onBeginUploadETemplateFileDelegate = new BeginOperationDelegate(this.OnBeginUploadETemplateFile);
            }
            if ((this.onEndUploadETemplateFileDelegate == null)) {
                this.onEndUploadETemplateFileDelegate = new EndOperationDelegate(this.OnEndUploadETemplateFile);
            }
            if ((this.onUploadETemplateFileCompletedDelegate == null)) {
                this.onUploadETemplateFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadETemplateFileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadETemplateFileDelegate, new object[] {
                        fileName,
                        data}, this.onEndUploadETemplateFileDelegate, this.onUploadETemplateFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginDeleteReportFile(System.Collections.ObjectModel.ObservableCollection<string> fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteReportFile(fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndDeleteReportFile(System.IAsyncResult result) {
            base.Channel.EndDeleteReportFile(result);
        }
        
        private System.IAsyncResult OnBeginDeleteReportFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> fileName = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginDeleteReportFile(fileName, callback, asyncState);
        }
        
        private object[] OnEndDeleteReportFile(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndDeleteReportFile(result);
            return null;
        }
        
        private void OnDeleteReportFileCompleted(object state) {
            if ((this.DeleteReportFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteReportFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteReportFileAsync(System.Collections.ObjectModel.ObservableCollection<string> fileName) {
            this.DeleteReportFileAsync(fileName, null);
        }
        
        public void DeleteReportFileAsync(System.Collections.ObjectModel.ObservableCollection<string> fileName, object userState) {
            if ((this.onBeginDeleteReportFileDelegate == null)) {
                this.onBeginDeleteReportFileDelegate = new BeginOperationDelegate(this.OnBeginDeleteReportFile);
            }
            if ((this.onEndDeleteReportFileDelegate == null)) {
                this.onEndDeleteReportFileDelegate = new EndOperationDelegate(this.OnEndDeleteReportFile);
            }
            if ((this.onDeleteReportFileCompletedDelegate == null)) {
                this.onDeleteReportFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteReportFileCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteReportFileDelegate, new object[] {
                        fileName}, this.onEndDeleteReportFileDelegate, this.onDeleteReportFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginDeleteMISReportFile(string FolderPath, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMISReportFile(FolderPath, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndDeleteMISReportFile(System.IAsyncResult result) {
            base.Channel.EndDeleteMISReportFile(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMISReportFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string FolderPath = ((string)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginDeleteMISReportFile(FolderPath, callback, asyncState);
        }
        
        private object[] OnEndDeleteMISReportFile(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndDeleteMISReportFile(result);
            return null;
        }
        
        private void OnDeleteMISReportFileCompleted(object state) {
            if ((this.DeleteMISReportFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMISReportFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMISReportFileAsync(string FolderPath) {
            this.DeleteMISReportFileAsync(FolderPath, null);
        }
        
        public void DeleteMISReportFileAsync(string FolderPath, object userState) {
            if ((this.onBeginDeleteMISReportFileDelegate == null)) {
                this.onBeginDeleteMISReportFileDelegate = new BeginOperationDelegate(this.OnBeginDeleteMISReportFile);
            }
            if ((this.onEndDeleteMISReportFileDelegate == null)) {
                this.onEndDeleteMISReportFileDelegate = new EndOperationDelegate(this.OnEndDeleteMISReportFile);
            }
            if ((this.onDeleteMISReportFileCompletedDelegate == null)) {
                this.onDeleteMISReportFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMISReportFileCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMISReportFileDelegate, new object[] {
                        FolderPath}, this.onEndDeleteMISReportFileDelegate, this.onDeleteMISReportFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginSaveVariance(PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance variance, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveVariance(variance, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndSaveVariance(System.IAsyncResult result) {
            return base.Channel.EndSaveVariance(result);
        }
        
        private System.IAsyncResult OnBeginSaveVariance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance variance = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginSaveVariance(variance, callback, asyncState);
        }
        
        private object[] OnEndSaveVariance(System.IAsyncResult result) {
            int retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndSaveVariance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveVarianceCompleted(object state) {
            if ((this.SaveVarianceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveVarianceCompleted(this, new SaveVarianceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveVarianceAsync(PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance variance) {
            this.SaveVarianceAsync(variance, null);
        }
        
        public void SaveVarianceAsync(PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance variance, object userState) {
            if ((this.onBeginSaveVarianceDelegate == null)) {
                this.onBeginSaveVarianceDelegate = new BeginOperationDelegate(this.OnBeginSaveVariance);
            }
            if ((this.onEndSaveVarianceDelegate == null)) {
                this.onEndSaveVarianceDelegate = new EndOperationDelegate(this.OnEndSaveVariance);
            }
            if ((this.onSaveVarianceCompletedDelegate == null)) {
                this.onSaveVarianceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveVarianceCompleted);
            }
            base.InvokeAsync(this.onBeginSaveVarianceDelegate, new object[] {
                        variance}, this.onEndSaveVarianceDelegate, this.onSaveVarianceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginGetVarinceList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVarinceList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance> PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndGetVarinceList(System.IAsyncResult result) {
            return base.Channel.EndGetVarinceList(result);
        }
        
        private System.IAsyncResult OnBeginGetVarinceList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginGetVarinceList(callback, asyncState);
        }
        
        private object[] OnEndGetVarinceList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance> retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndGetVarinceList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVarinceListCompleted(object state) {
            if ((this.GetVarinceListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVarinceListCompleted(this, new GetVarinceListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVarinceListAsync() {
            this.GetVarinceListAsync(null);
        }
        
        public void GetVarinceListAsync(object userState) {
            if ((this.onBeginGetVarinceListDelegate == null)) {
                this.onBeginGetVarinceListDelegate = new BeginOperationDelegate(this.OnBeginGetVarinceList);
            }
            if ((this.onEndGetVarinceListDelegate == null)) {
                this.onEndGetVarinceListDelegate = new EndOperationDelegate(this.OnEndGetVarinceList);
            }
            if ((this.onGetVarinceListCompletedDelegate == null)) {
                this.onGetVarinceListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVarinceListCompleted);
            }
            base.InvokeAsync(this.onBeginGetVarinceListDelegate, null, this.onEndGetVarinceListDelegate, this.onGetVarinceListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginGetPatientEMRList(long PatientId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPatientEMRList(PatientId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData> PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndGetPatientEMRList(System.IAsyncResult result) {
            return base.Channel.EndGetPatientEMRList(result);
        }
        
        private System.IAsyncResult OnBeginGetPatientEMRList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long PatientId = ((long)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginGetPatientEMRList(PatientId, callback, asyncState);
        }
        
        private object[] OnEndGetPatientEMRList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData> retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndGetPatientEMRList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPatientEMRListCompleted(object state) {
            if ((this.GetPatientEMRListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPatientEMRListCompleted(this, new GetPatientEMRListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPatientEMRListAsync(long PatientId) {
            this.GetPatientEMRListAsync(PatientId, null);
        }
        
        public void GetPatientEMRListAsync(long PatientId, object userState) {
            if ((this.onBeginGetPatientEMRListDelegate == null)) {
                this.onBeginGetPatientEMRListDelegate = new BeginOperationDelegate(this.OnBeginGetPatientEMRList);
            }
            if ((this.onEndGetPatientEMRListDelegate == null)) {
                this.onEndGetPatientEMRListDelegate = new EndOperationDelegate(this.OnEndGetPatientEMRList);
            }
            if ((this.onGetPatientEMRListCompletedDelegate == null)) {
                this.onGetPatientEMRListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPatientEMRListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPatientEMRListDelegate, new object[] {
                        PatientId}, this.onEndGetPatientEMRListDelegate, this.onGetPatientEMRListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginOpenCreatedRadReport(string fileName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOpenCreatedRadReport(fileName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndOpenCreatedRadReport(System.IAsyncResult result) {
            return base.Channel.EndOpenCreatedRadReport(result);
        }
        
        private System.IAsyncResult OnBeginOpenCreatedRadReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginOpenCreatedRadReport(fileName, callback, asyncState);
        }
        
        private object[] OnEndOpenCreatedRadReport(System.IAsyncResult result) {
            byte[] retVal = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndOpenCreatedRadReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOpenCreatedRadReportCompleted(object state) {
            if ((this.OpenCreatedRadReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCreatedRadReportCompleted(this, new OpenCreatedRadReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenCreatedRadReportAsync(string fileName) {
            this.OpenCreatedRadReportAsync(fileName, null);
        }
        
        public void OpenCreatedRadReportAsync(string fileName, object userState) {
            if ((this.onBeginOpenCreatedRadReportDelegate == null)) {
                this.onBeginOpenCreatedRadReportDelegate = new BeginOperationDelegate(this.OnBeginOpenCreatedRadReport);
            }
            if ((this.onEndOpenCreatedRadReportDelegate == null)) {
                this.onEndOpenCreatedRadReportDelegate = new EndOperationDelegate(this.OnEndOpenCreatedRadReport);
            }
            if ((this.onOpenCreatedRadReportCompletedDelegate == null)) {
                this.onOpenCreatedRadReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCreatedRadReportCompleted);
            }
            base.InvokeAsync(this.onBeginOpenCreatedRadReportDelegate, new object[] {
                        fileName}, this.onEndOpenCreatedRadReportDelegate, this.onOpenCreatedRadReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.BeginUploadSOPFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadSOPFile(fileName, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService.EndUploadSOPFile(System.IAsyncResult result) {
            base.Channel.EndUploadSOPFile(result);
        }
        
        private System.IAsyncResult OnBeginUploadSOPFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            byte[] data = ((byte[])(inValues[1]));
            return ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).BeginUploadSOPFile(fileName, data, callback, asyncState);
        }
        
        private object[] OnEndUploadSOPFile(System.IAsyncResult result) {
            ((PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService)(this)).EndUploadSOPFile(result);
            return null;
        }
        
        private void OnUploadSOPFileCompleted(object state) {
            if ((this.UploadSOPFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadSOPFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadSOPFileAsync(string fileName, byte[] data) {
            this.UploadSOPFileAsync(fileName, data, null);
        }
        
        public void UploadSOPFileAsync(string fileName, byte[] data, object userState) {
            if ((this.onBeginUploadSOPFileDelegate == null)) {
                this.onBeginUploadSOPFileDelegate = new BeginOperationDelegate(this.OnBeginUploadSOPFile);
            }
            if ((this.onEndUploadSOPFileDelegate == null)) {
                this.onEndUploadSOPFileDelegate = new EndOperationDelegate(this.OnEndUploadSOPFile);
            }
            if ((this.onUploadSOPFileCompletedDelegate == null)) {
                this.onUploadSOPFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadSOPFileCompleted);
            }
            base.InvokeAsync(this.onBeginUploadSOPFileDelegate, new object[] {
                        fileName,
                        data}, this.onEndUploadSOPFileDelegate, this.onUploadSOPFileCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService CreateChannel() {
            return new DataTemplateHttpsServiceClientChannel(this);
        }
        
        private class DataTemplateHttpsServiceClientChannel : ChannelBase<PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService>, PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService {
            
            public DataTemplateHttpsServiceClientChannel(System.ServiceModel.ClientBase<PalashDynamics.Service.DataTemplateHttpsServiceRef.DataTemplateHttpsService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginSaveTemplate(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = template;
                System.IAsyncResult _result = base.BeginInvoke("SaveTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSaveTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SaveTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateTemplate(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = template;
                System.IAsyncResult _result = base.BeginInvoke("UpdateTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public int EndUpdateTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("UpdateTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteTemplate(PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate template, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = template;
                System.IAsyncResult _result = base.BeginInvoke("DeleteTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public int EndDeleteTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("DeleteTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTemplatesDetailsByTemplateTitle(long TemplateId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = TemplateId;
                System.IAsyncResult _result = base.BeginInvoke("GetTemplatesDetailsByTemplateTitle", _args, callback, asyncState);
                return _result;
            }
            
            public PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate EndGetTemplatesDetailsByTemplateTitle(System.IAsyncResult result) {
                object[] _args = new object[0];
                PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate _result = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate)(base.EndInvoke("GetTemplatesDetailsByTemplateTitle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTemplatesList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTemplatesList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate> EndGetTemplatesList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate> _result = ((System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.EMRTemplate>)(base.EndInvoke("GetTemplatesList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRelationList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRelationList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.IntraTemplateRelation> EndGetRelationList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.IntraTemplateRelation> _result = ((System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.IntraTemplateRelation>)(base.EndInvoke("GetRelationList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSavePatientEMR(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMR, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PatientEMR;
                System.IAsyncResult _result = base.BeginInvoke("SavePatientEMR", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSavePatientEMR(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SavePatientEMR", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSavePatientEMR1(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMRData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PatientEMRData;
                System.IAsyncResult _result = base.BeginInvoke("SavePatientEMR1", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSavePatientEMR1(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SavePatientEMR1", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePatientEMR(PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData PatientEMR, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PatientEMR;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePatientEMR", _args, callback, asyncState);
                return _result;
            }
            
            public int EndUpdatePatientEMR(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("UpdatePatientEMR", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPatientEMRByPatientIdAndTemplateId(long PatientId, long TemplateId, long VisitId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = PatientId;
                _args[1] = TemplateId;
                _args[2] = VisitId;
                System.IAsyncResult _result = base.BeginInvoke("GetPatientEMRByPatientIdAndTemplateId", _args, callback, asyncState);
                return _result;
            }
            
            public PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData EndGetPatientEMRByPatientIdAndTemplateId(System.IAsyncResult result) {
                object[] _args = new object[0];
                PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData _result = ((PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData)(base.EndInvoke("GetPatientEMRByPatientIdAndTemplateId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFileList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFileList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetFileList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetFileList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFilePath(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFilePath", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetFilePath(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetFilePath", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = data;
                System.IAsyncResult _result = base.BeginInvoke("UploadFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadFile", _args, result);
            }
            
            public System.IAsyncResult BeginDeletePathReportFile(string fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("DeletePathReportFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeletePathReportFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeletePathReportFile", _args, result);
            }
            
            public System.IAsyncResult BeginUploadReportFileForPathology(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = data;
                System.IAsyncResult _result = base.BeginInvoke("UploadReportFileForPathology", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadReportFileForPathology(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadReportFileForPathology", _args, result);
            }
            
            public System.IAsyncResult BeginAttachmentFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = data;
                System.IAsyncResult _result = base.BeginInvoke("AttachmentFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAttachmentFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AttachmentFile", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteAttachmentFile(string fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAttachmentFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteAttachmentFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteAttachmentFile", _args, result);
            }
            
            public System.IAsyncResult BeginActivationFile(string FileData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = FileData;
                System.IAsyncResult _result = base.BeginInvoke("ActivationFile", _args, callback, asyncState);
                return _result;
            }
            
            public string EndActivationFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ActivationFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetApplicationPath(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetApplicationPath", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetApplicationPath(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetApplicationPath", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetActivationFile(string FileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = FileName;
                System.IAsyncResult _result = base.BeginInvoke("GetActivationFile", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetActivationFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetActivationFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadReportFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = data;
                System.IAsyncResult _result = base.BeginInvoke("UploadReportFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadReportFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadReportFile", _args, result);
            }
            
            public System.IAsyncResult BeginUploadReportFileForRadiology(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = data;
                System.IAsyncResult _result = base.BeginInvoke("UploadReportFileForRadiology", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadReportFileForRadiology(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadReportFileForRadiology", _args, result);
            }
            
            public System.IAsyncResult BeginUploadReportFileForDischarge(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = data;
                System.IAsyncResult _result = base.BeginInvoke("UploadReportFileForDischarge", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadReportFileForDischarge(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadReportFileForDischarge", _args, result);
            }
            
            public System.IAsyncResult BeginUploadReportFileForConsent(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = data;
                System.IAsyncResult _result = base.BeginInvoke("UploadReportFileForConsent", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadReportFileForConsent(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadReportFileForConsent", _args, result);
            }
            
            public System.IAsyncResult BeginUploadReportFileForMLCase(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = data;
                System.IAsyncResult _result = base.BeginInvoke("UploadReportFileForMLCase", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadReportFileForMLCase(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadReportFileForMLCase", _args, result);
            }
            
            public System.IAsyncResult BeginGlobalUploadFile(string RelativePath, string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = RelativePath;
                _args[1] = fileName;
                _args[2] = data;
                System.IAsyncResult _result = base.BeginInvoke("GlobalUploadFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGlobalUploadFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GlobalUploadFile", _args, result);
            }
            
            public System.IAsyncResult BeginGlobalDeleteFile(string RelativePath, System.Collections.ObjectModel.ObservableCollection<string> fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = RelativePath;
                _args[1] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("GlobalDeleteFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGlobalDeleteFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GlobalDeleteFile", _args, result);
            }
            
            public System.IAsyncResult BeginUploadETemplateFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = data;
                System.IAsyncResult _result = base.BeginInvoke("UploadETemplateFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadETemplateFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadETemplateFile", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteReportFile(System.Collections.ObjectModel.ObservableCollection<string> fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("DeleteReportFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteReportFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteReportFile", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteMISReportFile(string FolderPath, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = FolderPath;
                System.IAsyncResult _result = base.BeginInvoke("DeleteMISReportFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteMISReportFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteMISReportFile", _args, result);
            }
            
            public System.IAsyncResult BeginSaveVariance(PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance variance, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = variance;
                System.IAsyncResult _result = base.BeginInvoke("SaveVariance", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSaveVariance(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SaveVariance", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVarinceList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetVarinceList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance> EndGetVarinceList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance> _result = ((System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.Variance>)(base.EndInvoke("GetVarinceList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPatientEMRList(long PatientId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PatientId;
                System.IAsyncResult _result = base.BeginInvoke("GetPatientEMRList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData> EndGetPatientEMRList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData> _result = ((System.Collections.ObjectModel.ObservableCollection<PalashDynamics.Service.DataTemplateHttpsServiceRef.PatientEMRData>)(base.EndInvoke("GetPatientEMRList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginOpenCreatedRadReport(string fileName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("OpenCreatedRadReport", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndOpenCreatedRadReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("OpenCreatedRadReport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadSOPFile(string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = fileName;
                _args[1] = data;
                System.IAsyncResult _result = base.BeginInvoke("UploadSOPFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadSOPFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadSOPFile", _args, result);
            }
        }
    }
}
